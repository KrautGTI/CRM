{"version":3,"sources":["assets/images/icons/light-bulb.png","assets/images/icons/wholesale.png","assets/images/icons/eco-home.png","assets/images/icons/phone-call.png","assets/images/icons/404.png","assets/images/backgrounds/solar-1.jpg","assets/images/backgrounds/friends.jpg","assets/images/backgrounds/commercial-1.jpg","assets/images/backgrounds/hero.png","assets/images/logos/sunrun-partner.png","assets/images/logos/calpoly.png","assets/images/logos/logo.png","history.js","components/misc/WithTracker.js","components/misc/Page404.js","components/misc/ErrorBoundary.js","utils/formSchemas.js","Fire.js","utils/constants.js","components/forms/ContactForm.js","components/pages/Home.js","components/pages/About.js","components/pages/WhySolar.js","utils/misc.js","components/forms/ReferralForm.js","components/pages/BonusReferrals.js","components/forms/SolarQuoteForm.js","components/pages/CommercialSolar.js","components/pages/SolarQuote.js","components/forms/ForgotPassword.js","components/pages/Login.js","components/pages/FAQ.js","components/misc/Confirmation.js","components/pages/Account.js","components/pages/LoggingIn.js","components/pages/AdminPanel.js","routes.js","components/misc/Header.js","components/misc/Footer.js","components/misc/ScrollToTop.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createBrowserHistory","GoogleAnalytics","initialize","process","REACT_APP_GA_UA","withTracker","WrappedComponent","options","trackPage","page","set","pageview","HOC","this","props","location","pathname","search","prevProps","currentPage","nextPage","Component","Page404","className","href","src","error404Pic","alt","ErrorBoundary","state","error","errorInfo","setState","toString","to","children","React","contactFormSchema","yup","shape","email","required","max","min","name","message","userContactFormSchema","referralFormSchema","refereeFirstName","refereeLastName","refereePhone","refereeEmail","relation","referrerFirstName","referrerLastName","referrerPhone","referrerEmail","salesRep","forgotPasswordSchema","visitorSolarQuoteFormSchema","firstName","lastName","phone","business","isCommercial","acquisition","buildingName","zip","averageBill","shaded","solarReasons","proposalPref","billUrl","url","password","confirmPassword","userSolarQuoteFormSchema","profileSchema","logInSchema","statusSchema","status","userAssignedToSchema","assignedTo","userNotesSchema","notes","buildingNotesSchema","liveConfig","apiKey","REACT_APP_FIREBASE_LIVE_API_KEY","authDomain","REACT_APP_FIREBASE_LIVE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_LIVE_DATABASE_URL","projectId","REACT_APP_FIREBASE_LIVE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_LIVE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_LIVE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_LIVE_APP_ID","measurementId","REACT_APP_FIREBASE_LIVE_MEASUREMENT_ID","config","REACT_APP_FIREBASE_TEST_API_KEY","REACT_APP_FIREBASE_TEST_AUTH_DOMAIN","REACT_APP_FIREBASE_TEST_DATABASE_URL","REACT_APP_FIREBASE_TEST_PROJECT_ID","REACT_APP_FIREBASE_TEST_STORAGE_BUCKET","REACT_APP_FIREBASE_TEST_MESSAGING_SENDER_ID","REACT_APP_FIREBASE_TEST_APP_ID","REACT_APP_FIREBASE_TEST_MEASUREMENT_ID","fire","firebase","initializeApp","firestore","storage","PENDING","functions","ContactForm","addMessage","bind","user","unsubscribeUsers","collection","doc","uid","onSnapshot","docWithMore","Object","assign","data","id","values","add","userId","timestamp","Date","now","constant","then","store","addNotification","title","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","initialValues","onSubmit","actions","resetForm","validationSchema","handleSubmit","fluid","xs","sm","onChange","handleChange","placeholder","value","errors","touched","component","center","onClick","e","disabled","dirty","isSubmitting","Home","md","require","About","target","rel","WhySolar","topBgImageStyle","width","height","backgroundImage","Background","backgroundPosition","backgroundSize","style","timestampToDateTime","dateObject","dd","getDate","mm","getMonth","yyyy","getFullYear","hrs","getHours","mins","getMinutes","fullDate","fullTime","ucFirst","string","charAt","toUpperCase","slice","genId","length","result","characters","charactersLength","i","Math","floor","random","validatePhone","isNaN","phoneUtil","PhoneNumberUtil","getInstance","number","parseAndKeepRawInput","isValidNumber","err","console","ReferralForm","addReferral","referee","referrer","autoComplete","validate","borderBottom","paddingLeft","BonusReferrals","SolarQuoteForm","addVisitorQuote","filePath","fileUrl","passwordShown","window","recaptchaVerifier","auth","RecaptchaVerifier","response","createUserWithEmailAndPassword","userData","log","currentUser","updateProfile","displayName","clientId","proposalUrl","isAdmin","merge","history","push","catch","clear","errorCode","code","errorMessage","render","docRef","fileProgress","confirm","addUserQuote","handleFileChange","files","handleFileUpload","file","randomId","ref","put","on","snapshot","round","bytesTransferred","totalBytes","getDownloadURL","showPassword","preventDefault","initialFormState","commercialPage","RadioButton","label","defaultValue","Checkbox","field","form","checked","includes","nextValue","filter","setFieldValue","concat","onBlur","onSelect","htmlFor","withRouter","CommercialSolar","SolarQuote","ForgotPassword","memo","linkClass","handleOpenModal","wording","isOpen","showModal","contentLabel","onRequestClose","handleCloseModal","sendPasswordReset","LogIn","signIn","signInWithEmailAndPassword","reload","sendPasswordResetEmail","FAQ","allowZeroExpanded","questions","map","question","index","key","body","Confirmation","show","proceedLabel","cancelLabel","confirmation","proceed","cancel","Account","updateDetails","setSubmitting","createConfirmation","confirmable","buildings","unsubscribeBuildings","where","orderBy","querySnapshot","tempBuildings","forEach","building","renderStatus","enableReinitialize","lg","handleReset","LoggingIn","redirectToProfile","setTimeout","AdminPanel","handleOpenUserNotesModal","tempShowUserModals","showUserNotesModal","handleCloseUserNotesModal","handleOpenBuildingNotesModal","tempShowBuildingModals","showBuildingNotesModal","handleCloseBuildingNotesModal","handleOpenUploadProposalModal","tempShowUploadProposalModal","showUploadProposalModal","handleCloseUploadProposalModal","choseToLeave","proposalSavedToDb","updateUserAssignedTo","foundAdminInfo","admins","find","admin","updateBuildingStatus","buildingId","updateReferralStatus","referralId","updateMessageStatus","messageId","updateUserNotes","removedWeirdBr","replace","updateBuildingNotes","uploadProposal","toggleMyClients","myClientsShown","toggleFilterByClient","substring","thisClientDataShown","toggleQueryDirection","queryDirection","orderUsers","usersOrder","orderBuildings","buildingsOrder","orderReferrals","referralsOrder","orderMessages","messagesOrder","users","referrals","messages","numBuildingsLoaded","numUsersLoaded","numReferralsLoaded","numMessagesLoaded","usersTotal","buildingsTotal","referralsTotal","messagesTotal","modules","toolbar","size","align","clipboard","matchVisual","formats","unsubscribeAdminUsers","tempAdmins","unsubscribeOther","loadMoreBuildings","loadMoreUsers","loadMoreReferrals","loadMoreMessages","unsubscribeLoadUsers","unsubscribeLoadBuildings","unsubscribeLoadReferrals","unsubscribeLoadMessages","unsubscribeLoadMyUsers","unsubscribeLoadClientBuildings","unsubscribeLoadClientReferrals","unsubscribeLoadClientMessages","prevState","newNumToLoad","limit","tempUsers","count","tempRefs","tempMessages","dateAndTime","initialUserAssignedToState","initialUserNotesState","join","initialBuildingStatusState","initialBuildingNotesState","initialReferralStatusState","initialMessageStatusState","Routes","exact","path","loggedIn","Login","UserRoute","Comp","rest","alert","VisitorRoute","Header","hamburgerRef","createRef","signOut","navLinksRef","current","addEventListener","classList","toggle","removeEventListener","viewBox","d","activeClassName","Footer","year","minWidth","maxWidth","ScrollToTop","scrollTo","Modal","setAppElement","App","loading","onAuthStateChanged","Boolean","hostname","match","noop","warn","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2d8febd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/light-bulb.c451d11d.png\";","module.exports = __webpack_public_path__ + \"static/media/wholesale.4a075595.png\";","module.exports = __webpack_public_path__ + \"static/media/eco-home.faa632e0.png\";","module.exports = __webpack_public_path__ + \"static/media/phone-call.f691ac2c.png\";","module.exports = __webpack_public_path__ + \"static/media/404.d33e048b.png\";","module.exports = __webpack_public_path__ + \"static/media/solar-1.bcf66096.jpg\";","module.exports = __webpack_public_path__ + \"static/media/friends.473bfb91.jpg\";","module.exports = __webpack_public_path__ + \"static/media/commercial-1.c2cfb2bc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hero.fde23091.png\";","module.exports = __webpack_public_path__ + \"static/media/sunrun-partner.09c59cc6.png\";","module.exports = __webpack_public_path__ + \"static/media/calpoly.4653ef33.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.acf63480.png\";","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, { Component, } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GA_UA);\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = page => {\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(page);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(nextPage);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;","import React from \"react\";\n\nimport error404Pic from \"../../assets/images/icons/404.png\";\n\nexport const Page404 = () => (\n    <div className=\"wrapper\">\n        <h1>Uh oh!</h1>\n        <p>\n            It doesn't look like this page exists. \n            Check the web address you entered in the URL bar above and try again. \n            <br/>\n            If you still are getting this message, contact \n            <a\n                href=\"mailto:help@minute.tech\"\n                >\n\n                &nbsp;help@minute.tech\n            </a>. \n           \n        </p>\n        <img src={error404Pic} alt=\"error404\" className=\"large responsive center\" />\n        \n    </div>\n  );","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    })\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div className=\"wrapper\">\n            <h2>Something went wrong</h2>\n            {/* TODO: details not supported in Edge */}\n            <details>  \n                <summary>more info</summary>  \n                {this.state.error && this.state.error.toString()}\n            </details>\n            <p>Sorry about this! Please contact <u className=\"blue\">help@minute.tech</u> if the error persists.</p>\n            <Link to=\"/\"><button className=\"s-btn\">Return to home page.</button></Link>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\nexport default ErrorBoundary;","import * as yup from \"yup\";\n\nexport const contactFormSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email(\"Please enter a valid email.\")\n      .required(\"Email is required.\")      \n      .max(150,\"Email must be at most 150 characters long.\")\n      .min(2,\"Email must be at least 2 characters long.\"),\n    name: yup\n      .string()\n      .required(\"Your name is required.\")\n      .max(150,\"Name must be at most 150 characters long.\")\n      .min(2,\"Name must be at least 2 characters long.\"),\n    message: yup\n      .string()\n      .required(\"A message body is required.\")\n      .max(30000,\"Message must be at most 30000 characters long.\")\n      .min(10,\"Message must be at least 10 characters long.\"),\n})\n\n\nexport const userContactFormSchema = yup.object().shape({\n  message: yup\n    .string()\n    .required(\"A message body is required.\")\n    .max(30000,\"Message must be at most 30000 characters long.\")\n    .min(10,\"Message must be at least 10 characters long.\"),\n})\n\nexport const referralFormSchema = yup.object().shape({\n  refereeFirstName: yup\n    .string()\n    .required(\"Their first name is required.\")\n    .max(150,\"Name must be at most 150 characters long.\")\n    .min(2,\"Name must be at least 2 characters long.\"),\n  refereeLastName: yup\n    .string()\n    .required(\"Their last name is required.\")\n    .max(150,\"Name must be at most 150 characters long.\")\n    .min(2,\"Name must be at least 2 characters long.\"),\n  refereePhone: yup\n    .string()\n    .required(\"Their phone number is required.\"),\n  refereeEmail: yup\n    .string()\n    .email(\"Please enter a valid email.\")      \n    .max(150,\"Email must be at most 150 characters long.\")\n    .min(2,\"Email must be at least 2 characters long.\"),\n  relation: yup\n    .string()\n    .max(400,\"Field can be at most 400 characters long.\")\n    .min(2,\"Field must be at least 2 characters long.\"),\n  referrerFirstName: yup\n    .string()\n    .max(150,\"Name must be at most 150 characters long.\")\n    .min(2,\"Name must be at least 2 characters long.\"),\n  referrerLastName: yup\n    .string()\n    .max(150,\"Name must be at most 150 characters long.\")\n    .min(2,\"Name must be at least 2 characters long.\"),\n  referrerPhone: yup\n    .string(),\n  referrerEmail: yup\n    .string()\n    .email(\"Please enter a valid email.\")\n    .max(150,\"Email must be at most 150 characters long.\")\n    .min(2,\"Email must be at least 2 characters long.\"),\n  salesRep: yup\n    .string()\n    .max(100,\"Sales rep can be at most 100 characters long.\")\n    .min(2,\"Sales rep must be at least 2 characters long.\"),\n})\n\nexport const forgotPasswordSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"Please enter a valid email address.\")\n    .required(\"Please enter your email.\"),\n})\n\nexport const visitorSolarQuoteFormSchema = yup.object().shape({\n  firstName: yup\n    .string()\n    .required(\"Your first name is required.\")\n    .max(150,\"Name must be at most 150 characters long.\")\n    .min(2,\"Name must be at least 2 characters long.\"),\n  lastName: yup\n    .string()\n    .required(\"Your last name is required.\")\n    .max(150,\"Name must be at most 150 characters long.\")\n    .min(2,\"Name must be at least 2 characters long.\"),\n  phone: yup\n    .string()\n    .required(\"Your phone number is required.\"),\n  email: yup\n    .string()\n    .email(\"Please enter a valid email.\")      \n    .max(150,\"Email must be at most 150 characters long.\")\n    .min(2,\"Email must be at least 2 characters long.\"),\n  business: yup\n    .string()\n    .max(150,\"Field can be at most 400 characters long.\")\n    .min(2,\"Field must be at least 2 characters long.\"),\n  isCommercial: yup.string(),\n  acquisition: yup.string(),\n  buildingName: yup\n    .string()\n    .max(100, \"The building name should be less than 100 characters long.\")\n    .min(2, \"The building name must be at least 2 characters long.\"),\n  zip: yup\n    .string()\n    .max(10, \"ZIP should be less than 10 digits.\"),\n  averageBill: yup.string(),\n  shaded: yup.string(),\n  solarReasons: yup.string(),\n  proposalPref: yup.string(),\n  billUrl: yup.string().url(\"Not a valid URL. Example: https://www.website.com\"),\n  password: yup\n    .string()\n    .max(50,\"Too long\")\n    .min(8,\"Too short\"),\n  confirmPassword: yup\n    .string()\n    .max(50,\"Too long\")\n    .min(8,\"Too short\")\n});\n\nexport const userSolarQuoteFormSchema = yup.object().shape({\n  buildingName: yup\n    .string()\n    .max(100, \"The building name should be less than 100 characters long.\")\n    .min(2, \"The building name must be at least 2 characters long.\"),\n  zip: yup\n    .string()\n    .max(10, \"ZIP should be less than 10 digits.\"),\n  isCommercial: yup.string(),\n  averageBill: yup.string(),\n  proposalPref: yup.string(),\n  shaded: yup.string(),\n  billUrl: yup.string().url(\"Not a valid URL. Example: https://www.website.com\"),\n})\n\nexport const profileSchema = yup.object().shape({\n  firstName: yup\n    .string()\n    .required(\"Your first name is required.\")\n    .max(150,\"Name must be at most 150 characters long.\")\n    .min(2,\"Name must be at least 2 characters long.\"),\n  lastName: yup\n    .string()\n    .required(\"Your last name is required.\")\n    .max(150,\"Name must be at most 150 characters long.\")\n    .min(2,\"Name must be at least 2 characters long.\"),\n  phone: yup\n    .string()\n    .required(\"Your phone number is required.\"),\n  email: yup\n    .string()\n    .email(\"Please enter a valid email.\")      \n    .max(150,\"Email must be at most 150 characters long.\")\n    .min(2,\"Email must be at least 2 characters long.\"),\n  solarReasons: yup.string(),\n})\n\nexport const logInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"Please enter an valid email\")\n    .required(\"Email is required.\"),\n  password: yup\n    .string()\n    .required(\"Password is required.\")\n    .max(50, \"Too long\")\n    .min(6, \"Too short\")\n});\n\nexport const statusSchema = yup.object().shape({\n  status: yup\n    .string(),\n});\n\nexport const userAssignedToSchema = yup.object().shape({\n  assignedTo: yup\n    .string(),\n});\n\nexport const userNotesSchema = yup.object().shape({\n  notes: yup\n    .string(),\n});\n\nexport const buildingNotesSchema = yup.object().shape({\n  notes: yup\n    .string(),\n});\n","import firebase from 'firebase/app';\nimport 'firebase/auth';        // for authentication\nimport 'firebase/storage';     // for storage\nimport 'firebase/firestore';   // for cloud firestore\nimport 'firebase/functions';   // for cloud functions\n// import 'firebase/messaging'; // for cloud messaging\n\nconst liveConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_LIVE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_LIVE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_LIVE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_LIVE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_LIVE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_LIVE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_LIVE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_LIVE_MEASUREMENT_ID\n};\n\nconst testConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_TEST_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_TEST_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_TEST_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_TEST_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_TEST_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_TEST_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_TEST_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_TEST_MEASUREMENT_ID\n};\n\nconst config = (process.env.NODE_ENV === 'production' ? liveConfig : testConfig);\n\nconst fire = firebase.initializeApp(config);\nconst firestore = firebase.firestore();\nconst storage = firebase.storage();\nconst functions = firebase.functions();\n\nexport { \n  firebase, \n  fire, \n  firestore, \n  storage, \n  functions, \n  // messaging \n};\n","// Statuses\nexport const PENDING = \"pending\";\nexport const READY = \"ready\";\nexport const DONE = \"done\";\nexport const EXPIRED = \"expired\";\n\n// Proposal preference\nexport const PDF = \"pdf\";\nexport const PHONE = \"phone\";\nexport const INPERSON = \"inperson\";","import React, { Component } from 'react'\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { Formik, Field } from 'formik';\nimport { store } from 'react-notifications-component';\nimport { contactFormSchema, userContactFormSchema } from '../../utils/formSchemas'\nimport { firestore } from \"../../Fire.js\";\nimport * as constant from \"../../utils/constants.js\";\n\nclass ContactForm extends Component {\n    constructor(props) {\n        super(props);\n        this.addMessage = this.addMessage.bind(this);\n\n        this.state = {\n            user: {}\n        }\n    }\n\n    componentDidMount(){\n        if(this.props.user){\n            // Listen for Firestore changes\n            this.unsubscribeUsers = firestore.collection(\"users\").doc(this.props.user.uid)\n            .onSnapshot((doc) => {\n                var docWithMore = Object.assign({}, doc.data());\n                docWithMore.id = doc.id;\n\n                this.setState({\n                    user: docWithMore\n                }) \n            });\n        }\n    }\n\n    componentWillUnmount() {\n        if(this.unsubscribeUsers){\n            this.unsubscribeUsers();\n        }\n    }\n    \n    addMessage(values){\n        if(this.props.user){\n            firestore.collection('messages').add({\n                email: this.state.user.email,\n                name: `${this.state.user.firstName} ${this.state.user.lastName}`,\n                message: values.message,\n                userId: this.props.user.uid,\n                timestamp: Date.now(),\n                status: constant.PENDING\n            }).then(\n                store.addNotification({\n                    title: \"Success\",\n                    message: \"Message submitted successfully.\",\n                    type: \"success\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n            );\n        } else {\n            firestore.collection('messages').add({\n                email: values.email,\n                name: values.name,\n                message: values.message,\n                userId: \"\",\n                timestamp: Date.now(),\n                status: constant.PENDING\n            }).then(\n                store.addNotification({\n                    title: \"Success\",\n                    message: \"Message submitted successfully.\",\n                    type: \"success\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n            );\n        }\n        \n      }\n      \n    render() {\n        const initialFormState = {\n            email: \"\",\n            name: \"\",\n            message: \"\"\n          };\n\n        return (\n            <div className=\"horiz-center\">\n                <Formik\n                    initialValues={initialFormState}\n                    onSubmit={(values, actions) => {\n                        this.addMessage(values);\n                        actions.resetForm()\n                    }}\n                    validationSchema={this.props.user ? userContactFormSchema : contactFormSchema}\n                    >\n                    {props => (\n                        <form onSubmit={props.handleSubmit}>\n                            <Grid fluid>\n                                <Row className={this.props.user ? \"hide\" : \"\"}>\n                                    <Col xs={12} sm={6} className=\"s-margin-b\">\n                                        <label>Name:</label>\n                                        <br/>\n                                        <Field\n                                            type=\"text\"\n                                            required\n                                            onChange={props.handleChange}\n                                            placeholder=\"John Doe\"\n                                            name=\"name\"\n                                            value={props.values.name}\n                                        />\n                                        {props.errors.name && props.touched.name ? (\n                                            <span className=\"red\">{props.errors.name}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                        \n                                    </Col>\n                                    <Col xs={12} sm={6} className=\"s-margin-b\">\n                                        <label>Email:</label>\n                                        <br/>\n                                        <Field\n                                            type=\"text\"\n                                            required\n                                            onChange={props.handleChange}\n                                            placeholder=\"john_doe@gmail.com\"\n                                            name=\"email\"\n                                            value={props.values.email}\n                                        />\n                                        {props.errors.email && props.touched.email ? (\n                                            <span className=\"red\">{props.errors.email}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={12} className=\"s-margin-b\">\n                                        <label>Message:</label>\n                                        <br/>\n                                        <Field\n                                            component=\"textarea\"\n                                            required\n                                            onChange={props.handleChange}\n                                            placeholder=\"Detail what you want to say here.\"\n                                            name=\"message\"\n                                            value={props.values.message}\n                                        />\n                                        {props.errors.message && props.touched.message ? (\n                                            <span className=\"red\">{props.errors.message}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                </Row>\n                                <Row center=\"xs\" className=\"s-margin-t-b\">\n                                    <Col xs={12}>\n                                        <a className=\"btn btn-sm animated-button victoria-one\" href=\"# \" onClick={(e) => props.handleSubmit(e)}>\n                                            <button type=\"submit\" className=\"just-text-btn\" disabled={!props.dirty && !props.isSubmitting}>Submit</button>\n                                        </a>\n                                    </Col>\n                                </Row>\n                            </Grid>\n                        </form>\n                    )}\n                </Formik>\n            </div>\n        )\n    }\n}\n\nexport default ContactForm\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport ContactForm from '../forms/ContactForm';\nimport { Helmet } from 'react-helmet-async';\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                <Helmet>\n                    <title>Home | Prestige Power</title>\n                </Helmet>\n                <div className=\"hero-container-large\">\n                    <div className=\"hero-image-1\">\n                        <div className=\"hero-text text-shadow\">\n                            <h1 className=\"s-margin-b no-padding \">Solar &amp; Battery</h1>\n                            <h2 className=\"s-margin-b no-padding\">Sustainability for your future</h2>\n                            <Link to=\"/solar-quote\" className=\"btn btn-md animated-button doug-one\">Request Free Quote</Link>\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"wrapper\">\n                    <h1 className=\"center-text\">Why Solar?</h1>\n                    <p className=\"l-width center\">\n                        In today’s world, many people are concerned about the impact that everyday living has on the environment. \n                        Solar power allows homeowners to produce their own, clean energy, while saving tens of thousands of dollars doing so. \n                        A solar installation even adds value to a homeowner’s property at no cost to the homeowner. That’s truly a no brainer, right?\n                    </p>\n                    \n                    <div className=\"center-text m-margin-b\">\n                        <Link to=\"/why-solar\" className=\"btn btn-sm animated-button victoria-two\">Learn more</Link>\n                    </div>\n                    <Grid fluid>\n                        <Row center=\"xs\">\n                            <Col sm={12} md={3}>\n                                <img\n                                    className=\"responsive small\"\n                                    alt=\"light bulb\"\n                                    src={require(\"../../assets/images/icons/light-bulb.png\")}\n                                /> \n                                <h2>Save Money</h2>\n                                <p>\n                                    Electricity bills are skyrocketing. By installing solar panels on your home, you can now harness\n                                    the sun's energy to meet all of your electricity needs. Cost savings may vary,\n                                    but all homeowners save money using solar energy.\n                                </p>\n                            </Col>\n                            <Col sm={12} md={3}>\n                                <img\n                                    className=\"responsive small\"\n                                    alt=\"wholesale\"\n                                    src={require(\"../../assets/images/icons/wholesale.png\")}\n                                /> \n                                <h2>No Cost</h2>\n                                <p>\n                                    As long as your property qualifies, Prestige Power helps provide homeowners with hassle-free\n                                    design, permitting, installation, and monitoring. All at <i>no cost</i>!\n                                </p>\n                            </Col>\n                            <Col sm={12} md={3}>\n                                <img\n                                    className=\"responsive small\"\n                                    alt=\"eco home\"\n                                    src={require(\"../../assets/images/icons/eco-home.png\")}\n                                /> \n                                <h2>Sustainability</h2>\n                                <p>\n                                    Renewable solar power is the future of energy. Prestige Power specializes in providing\n                                    homeowners with the peace of mind of knowing exactly what their\n                                    electricity bills will be each month with no surprises. \n                                </p>\n                            </Col>\n                        </Row>\n                        <Row center=\"xs\">\n                            <Col xs={12} sm={6}>\n                                <img\n                                    className=\"responsive small\"\n                                    alt=\"phone\"\n                                    src={require(\"../../assets/images/icons/phone-call.png\")}\n                                /> \n                                <h2>More Questions</h2>\n                                <p>\n                                    If you would like to learn more about solar power or have questions about Prestige Power’s\n                                    services, schedule an appointment with one of our\n                                    knowledgeable sales representatives. \n                                </p>\n                                <Link to=\"/solar-quote\" className=\"just-text-btn green text-hover\">Get your FREE quote today!</Link>\n                            </Col>\n                        </Row>\n                        <Row center=\"xs\">\n                            <Col className=\"s-text m-margin-t\">\n                                <b>Disclaimer:</b>\n                                <p>Each home has a unique solar potential based on kilowatt usage and the direction, pitch, and shading of the roof. Cost savings may vary.</p>\n                            </Col>\n                        </Row>\n                    </Grid>\n                </div>\n\n                <div className=\"hero-container-large\">\n                    <div className=\"hero-image-2\">\n                        <div className=\"hero-text text-shadow\">\n                            <h1 className=\"s-margin-b no-padding \">Commercial Solar</h1>\n                            <h2 className=\"s-margin-b no-padding\">Have a big project? We work on projects of all sizes.</h2>\n                            <Link to=\"/commercial-solar\" className=\"btn btn-md animated-button doug-one\">Request Free Commercial Quote</Link>\n                        </div>\n                    </div>\n                </div>\n               \n                <div className=\"wrapper\">\n                    <h2>Have a question? Contact Us!</h2>\n                    <ContactForm user={this.props.user} />\n                </div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Helmet } from 'react-helmet-async';\nexport default class About extends Component {\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <Helmet>\n                    <title>About Us | Prestige Power</title>\n                </Helmet>\n                <h1>\n                    About Us  \n                    <a href=\"https://www.sunrun.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img\n                            className=\"responsive right medium s-padding\"\n                            alt=\"sunrun\"\n                            src={require(\"../../assets/images/logos/sunrun-partner.png\")}\n                            /> \n                    </a>\n                    \n                </h1>\n                \n                <p>\n                    Prestige Power offers homeowners the opportunity to say goodbye to high utility bills and\n                    hello to solar savings. We are dedicated to assisting homeowners in transitioning to renewable\n                    energy and saving money at the same time.\n                </p>\n                <p>\n                    We provide qualified customers with options and services that are tailored to their needs. Our\n                    representatives assist each homeowner in selecting the installation that is best for his/her\n                    home. Whether you’re interested in buying a solar panel system outright, or taking part in our\n                    no-cost “Solar as Service” program, we can quickly present your options with honesty and\n                    transparency.\n                </p>\n                <p>\n                    Our mission is to rescue homeowners from their unpredictable, ever increasing utility\n                    rates. As a company, we strive to educate homeowners on how they are currently\n                    charged for electric power, and what they can do about it by switching to solar energy.\n                    We assist homeowners in saving money while helping the planet, one footprint at a\n                    time.\n                </p>\n\n                \n                <div className=\"center-text\">\n                    <h2>Proud Sponsor of California Polytechnic State University</h2>\n                    <img\n                        className=\"responsive large s-padding\"\n                        alt=\"cal poly\"\n                        src={require(\"../../assets/images/logos/calpoly.png\")}\n                        /> \n                </div>\n                \n                <h2>Our Team</h2>\n                <p>Coming soon!</p>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { Helmet } from 'react-helmet-async';\nimport Background from '../../assets/images/backgrounds/solar-1.jpg';\n\nexport default class WhySolar extends Component {\n    render() {\n        var topBgImageStyle = {\n            width: \"100%\",\n            height: \"200px\",\n            backgroundImage: `url(${Background})`,\n            backgroundPosition: \"50% 50%\", // change me around to move up and down!\n            backgroundSize: \"cover\"\n          };\n        return (\n            <>\n            <div style ={ topBgImageStyle }></div>\n            <div className=\"wrapper-w-img\">\n                <Helmet>\n                    <title>Why Solar? | Prestige Power</title>\n                </Helmet>\n                <h1>Why Solar?</h1>\n                <p>\n                    In today’s world, people are concerned about the impact that everyday living has on the\n                    environment. That’s where we come in. Prestige Power is a certified dealer for the nation’s\n                    leading solar company, Sunrun. We work together to provide homeowners with elite service\n                    and seamless conversion to renewable energy. Solar power allow homeowners to save on\n                    energy costs while benefitting the environment. Together, we can make the world a better\n                    place.\n                </p>\n\n                <p>\n                    Each solar installation comes with a 25 year warranty as well as a production guarantee from\n                    Sunrun. If you don’t use all of the power that your system produces, you have the option\n                    to roll over your excess power to the following year, or sell it back to your power company.\n                    With a solar installation, you can save money on energy costs and potentially earn money as\n                    well!\n                </p>\n\n                <p>\n                    Solar power allows homeowners to produce their own, clean energy, while often saving\n                    tens of thousands of dollars over time. A solar installation is also transferable if you wish to\n                    move and even adds value to your home at no cost to you. That’s a no brainer, right?\n                </p>\n\n                <h4>Benefits include:</h4>\n                <ul>\n                    <li>Exit your ever increasing electric company</li>\n                    <li>Earn money off producing your own clean energy</li>\n                    <li>Production guarantee over 25 years</li>\n                    <li>26% Federal Tax Credit (ITC)</li>\n                    <li>Full 25 year warranty and insurance on solar system</li>\n                    <li>Increase home value and sell at faster rate</li>\n                    <li>Full transfer guarantee to next homeowner</li>\n                    <li>Return on investment within 7-10 years depending on market</li>\n                    <li>Positive impact on the environment</li>\n                </ul>\n                \n\n                <Grid fluid className=\"s-padding-t\">\n                    <Row center=\"xs\">\n                        <Col xs={12} sm={3}>\n                            <img\n                                className=\"responsive small\"\n                                alt=\"light bulb\"\n                                src={require(\"../../assets/images/icons/light-bulb.png\")}\n                            /> \n                            <h2>Save Money</h2>\n                            <p>\n                                Electricity bills are skyrocketing. By installing solar panels on your home, you can now harness\n                                the sun's energy to meet all of your electricity needs and eliminate rate increases and\n                                unpredictability from your utility company. Each home has a unique solar potential based\n                                upon kilowatt usage and the direction, pitch and shading of the roof. Cost savings may vary,\n                                but all homeowners save money using solar energy.\n                            </p>\n                        </Col>\n                        <Col xs={12} sm={3}>\n                            <img\n                                className=\"responsive small\"\n                                alt=\"wholesale\"\n                                src={require(\"../../assets/images/icons/wholesale.png\")}\n                            /> \n                            <h2>No Cost</h2>\n                            <p>\n                                As long as your property qualifies, Prestige Power helps provide homeowners with hassle-free\n                                design, permitting, installation, and monitoring. All at <i>no cost</i>!\n                            </p>\n                        </Col>\n                        <Col xs={12} sm={3}>\n                            <img\n                                className=\"responsive small\"\n                                alt=\"eco home\"\n                                src={require(\"../../assets/images/icons/eco-home.png\")}\n                            /> \n                            <h2>Sustainability</h2>\n                            <p>\n                                Renewable solar power is the future of energy. Prestige Power specializes in providing\n                                homeowners with the peace of mind of knowing exactly what their\n                                electricity bills will be each month with no surprises. Homeowners who choose the “Solar as\n                                Service” option have their rates locked in below the electric company’s residential rates for the\n                                next 25 years.\n                            </p>\n                        </Col>\n                    </Row>\n                    <Row center=\"xs\">\n                        <Col xs={12} sm={6}>\n                            <img\n                                className=\"responsive small\"\n                                alt=\"phone\"\n                                src={require(\"../../assets/images/icons/phone-call.png\")}\n                            /> \n                            <h2>More Questions</h2>\n                            <p>\n                                If you would like to learn more about solar power or have questions about Prestige Power’s\n                                services, use the tab provided above to schedule an appointment with one of our\n                                knowledgeable sales representatives. Get your FREE quote today!\n                            </p>\n                        </Col>\n                    </Row>\n                    <Row center=\"xs\">\n                        <Col className=\"s-text m-margin-t\">\n                            <b>Disclaimer:</b>\n                            <p>Each home has a unique solar potential based on kilowatt usage and the direction, pitch, and shading of the roof. Cost savings may vary.</p>\n                        </Col>\n                    </Row>\n                </Grid>\n\n                <hr/>\n                <br/>\n\n                <h2>No Cost Solar</h2>\n                <p>\n                    Imagine being able to switch who you buy your electricity from and save money instantly.\n                    Depending on existing electric company rates, homeowners who convert to solar power\n                    using the “Solar as Service” option often save up to 20-50% on their electric bills with no out\n                    of pocket costs. If your property qualifies for the “Solar as Service” program, you are able to\n                    lock in your kilowatt price and gain the peace of mind of predictability in your electric bills.\n                    Sunrun will pay for the site survey, permitting, installation, and monitoring, and\n                    will even speak with your HOA if needed. We strive to make going green simple.\n                </p>\n                <br/>\n                <br/>\n                <br/>\n            </div>\n            </>\n        )\n    }\n}\n","// \n// Some random handy functions! \n//\n\nexport function timestampToDateTime(timestamp) {\n  const dateObject = new Date(timestamp);\n  let dd = dateObject.getDate();\n  let mm = dateObject.getMonth() + 1; // January is 0!\n  const yyyy = dateObject.getFullYear();\n  let hrs = dateObject.getHours();\n  let mins = dateObject.getMinutes();\n\n  if (dd < 10) {\n    dd = `0${dd}`;\n  }\n  if (mm < 10) {\n    mm = `0${mm}`;\n  }\n  if (hrs < 10) {\n    hrs = `0${hrs}`;\n  }\n  if (mins < 10) {\n    mins = `0${mins}`;\n  }\n  const fullDate = `${mm}/${dd}/${yyyy}`;\n  const fullTime = `${hrs}:${mins}`;\n\n  return {\n    fullTime,\n    fullDate\n  };\n}\n\n// First letter is uppercase\nexport function ucFirst(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n// Check if string is a URL\nexport function checkURL(url) {\n  var urlToString = url.toString().toLowerCase();\n  if(urlToString.match(/\\.(jpeg|jpg|png|gif)/g) != null){\n    return 'image'\n  } else if(urlToString.match(/\\.(mp4|ogg|webm)/g) != null){\n    return 'video/supported'\n  } else if(urlToString.match(/\\.(mov|avi|flv|wmv|mpeg4)/g) != null){\n    return 'video/unsupported'\n  }\n}\n\n// Ensure size is no more than 1GB (i think! lol, double check this)\nexport function validateSize(file) {\n  var FileSize = file.files[0].size / 1024 / 1024; // in MB\n  if (FileSize > 1000) {\n      return false\n  } else {\n    return true\n  }\n}\n\n// Generate random ID\nexport function genId(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n }\n\n// Test if user is on mobile\nexport function mobileCheck() {\n  var check = false;\n  // eslint-disable-next-line\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n  return check;\n};\n\nexport function validatePhone(value) {\n  if(!isNaN(value)){\n    try {\n      const phoneUtil = require('google-libphonenumber').PhoneNumberUtil.getInstance();\n      let error;\n      if(value){\n        const number = phoneUtil.parseAndKeepRawInput(value, \"US\");   \n        if(!phoneUtil.isValidNumber(number)){\n          error = 'Invalid phone number';\n        }\n      }\n      return error;\n  \n    } catch(err) {\n      return console.error(err)\n    }\n  } else {\n    return \"Only numbers allowed!\"\n  }\n  \n}","import React, { Component } from 'react'\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { Formik, Field } from 'formik';\nimport { store } from 'react-notifications-component';\nimport { referralFormSchema } from '../../utils/formSchemas'\nimport { firestore } from \"../../Fire.js\";\nimport { validatePhone, timestampToDateTime } from '../../utils/misc';\nimport * as constant from \"../../utils/constants.js\";\n\nclass ReferralForm extends Component {\n    constructor(props) {\n        super(props);\n        this.addReferral = this.addReferral.bind(this);\n        \n        this.state = {\n            user: {}\n        }\n    }\n    \n    componentDidMount(){\n        if(this.props.user){\n            // Listen for Firestore changes\n            this.unsubscribeUsers = firestore.collection(\"users\").doc(this.props.user.uid)\n                .onSnapshot((doc) => {\n                    var docWithMore = Object.assign({}, doc.data());\n                    docWithMore.id = doc.id;\n                    docWithMore.timestamp = timestampToDateTime(doc.data().timestamp)\n\n                    this.setState({\n                        user: docWithMore\n                    }) \n                });\n        }\n    }\n\n    componentWillUnmount() {\n        if(this.unsubscribeUsers){\n            this.unsubscribeUsers();\n        }\n    }   \n\n    addReferral(values, resetForm){\n        if(this.props.user){\n            firestore.collection('referrals').add({\n                referee: {\n                    firstName: values.refereeFirstName,\n                    lastName: values.refereeLastName,\n                    phone: values.refereePhone,\n                    email: values.refereeEmail\n                },\n                referrer: {\n                    firstName: this.state.user.firstName,\n                    lastName: this.state.user.lastName,\n                    phone: this.state.user.phone,\n                    email: this.state.user.email,\n                    userId: this.props.user.uid\n                },\n                relation: values.relation,\n                salesRep: values.salesRep,\n                timestamp: Date.now(),\n                status: constant.PENDING\n            }).then(() => {\n                resetForm()\n                store.addNotification({\n                    title: \"Success\",\n                    message: \"Referral submitted successfully.\",\n                    type: \"success\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n            });\n        } else {\n            firestore.collection('referrals').add({\n                referee: {\n                    firstName: values.refereeFirstName,\n                    lastName: values.refereeLastName,\n                    phone: values.refereePhone,\n                    email: values.refereeEmail\n                },\n                referrer: {\n                    firstName: values.referrerFirstName,\n                    lastName: values.referrerLastName,\n                    phone: values.referrerPhone,\n                    email: values.referrerEmail,\n                    userId: \"\"\n                },\n                relation: values.relation,\n                salesRep: values.salesRep,\n                timestamp: Date.now(),\n                status: constant.PENDING\n            }).then(() => {\n                resetForm()\n                store.addNotification({\n                    title: \"Success\",\n                    message: \"Referral submitted successfully.\",\n                    type: \"success\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n            });\n        }\n      }\n      \n    render() {\n        const initialFormState = {\n            refereeFirstName: \"\",\n            refereeLastName: \"\",\n            refereePhone: \"\",\n            refereeEmail: \"\",\n            relation: \"\",\n            referrerFirstName: \"\",\n            referrerLastName: \"\",\n            referrerPhone: \"\",\n            referrerEmail: \"\",\n            salesRep: \"\"\n          };\n\n        return (\n            <div className=\"horiz-center\">\n                <Formik\n                    initialValues={initialFormState}\n                    onSubmit={(values, actions) => {\n                        this.addReferral(values, actions.resetForm);\n                    }}\n                    validationSchema={referralFormSchema}\n                    >\n                    {props => (\n                        <form onSubmit={props.handleSubmit}>\n                            <Grid fluid>\n                                <h2>Their Information</h2>\n                                <Row>\n                                    <Col sm={12} md={6} className=\"s-margin-b\">\n                                        <label>First name: <span className=\"red\">*</span></label>\n                                        <br/>\n                                        <Field\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            required\n                                            onChange={props.handleChange}\n                                            placeholder=\"John\"\n                                            name=\"refereeFirstName\"\n                                            value={props.values.refereeFirstName}\n                                        />\n                                        {props.errors.refereeFirstName && props.touched.refereeFirstName ? (\n                                            <span className=\"red\">{props.errors.refereeFirstName}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                    <Col sm={12} md={6} className=\"s-margin-b\">\n                                        <label>Last name: <span className=\"red\">*</span></label>\n                                        <br/>\n                                        <Field\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            required\n                                            onChange={props.handleChange}\n                                            placeholder=\"Doe\"\n                                            name=\"refereeLastName\"\n                                            value={props.values.refereeLastName}\n                                        />\n                                        {props.errors.refereeLastName && props.touched.refereeLastName ? (\n                                            <span className=\"red\">{props.errors.refereeLastName}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <label>Phone: <span className=\"red\">*</span></label>\n                                        <br/>\n                                        <Field\n                                            name=\"refereePhone\"\n                                            autoComplete=\"none\"\n                                            validate={validatePhone}\n                                            onChange={props.handleChange}\n                                            value={props.values.refereePhone}\n                                            type=\"text\"\n                                            placeholder={props.values.refereePhone || `(123) 456-7890`}\n                                        />\n                                        {props.errors.refereePhone && props.touched.refereePhone ? (\n                                            <span className=\"red\">{props.errors.refereePhone}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                    <Col sm={12} md={6} className=\"s-margin-b\">\n                                        <label>Email:</label>\n                                        <br/>\n                                        <Field\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            required\n                                            onChange={props.handleChange}\n                                            placeholder=\"john_doe@gmail.com\"\n                                            name=\"refereeEmail\"\n                                            value={props.values.refereeEmail}\n                                        />\n                                        {props.errors.refereeEmail && props.touched.refereeEmail ? (\n                                            <span className=\"red\">{props.errors.refereeEmail}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={12} sm={6} className=\"s-margin-b\">\n                                        <label>\n                                            How do you know&nbsp;\n                                            {props.values.refereeFirstName \n                                                ? \n                                                <span className=\"dark-green\">{props.values.refereeFirstName} {props.values.refereeLastName}</span> \n                                                : \n                                                <span style={{borderBottom: \"1px solid black\", paddingLeft: \"50px\"}}>&nbsp;</span>\n                                            }\n                                            ?:\n                                        </label>\n                                        <br/>\n                                        <Field\n                                            type=\"text\"\n                                            required\n                                            onChange={props.handleChange}\n                                            placeholder={props.values.refereeFirstName \n                                                ? \n                                                `${props.values.refereeFirstName} is my neighbor!`\n                                                : \n                                                `Jane is my neighbor!`\n                                            }\n                                            name=\"relation\"\n                                            value={props.values.relation}\n                                        />\n                                        {props.errors.relation && props.touched.relation ? (\n                                            <span className=\"red\">{props.errors.relation}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                </Row>\n                                <hr/>\n                                <div className={this.props.user ? \"hide\" : \"\"}>\n                                    <h2>Your Information</h2>\n                                    <Row>\n                                        <Col sm={12} md={6} className=\"s-margin-b\">\n                                            <label>First name:</label>\n                                            <br/>\n                                            <Field\n                                                type=\"text\"\n                                                required\n                                                onChange={props.handleChange}\n                                                placeholder=\"John\"\n                                                name=\"referrerFirstName\"\n                                                value={props.values.referrerFirstName}\n                                            />\n                                            {props.errors.referrerFirstName && props.touched.referrerFirstName ? (\n                                                <span className=\"red\">{props.errors.referrerFirstName}</span>\n                                            ) : (\n                                                \"\"\n                                            )}\n                                        </Col>\n                                        <Col sm={12} md={6} className=\"s-margin-b\">\n                                            <label>Last name:</label>\n                                            <br/>\n                                            <Field\n                                                type=\"text\"\n                                                required\n                                                onChange={props.handleChange}\n                                                placeholder=\"Doe\"\n                                                name=\"referrerLastName\"\n                                                value={props.values.referrerLastName}\n                                            />\n                                            {props.errors.referrerLastName && props.touched.referrerLastName ? (\n                                                <span className=\"red\">{props.errors.referrerLastName}</span>\n                                            ) : (\n                                                \"\"\n                                            )}\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col sm={12} md={6}>\n                                            <label>Phone: </label>\n                                            <br/>\n                                            <Field\n                                                name=\"referrerPhone\"\n                                                validate={validatePhone}\n                                                onChange={props.handleChange}\n                                                value={props.values.referrerPhone}\n                                                type=\"text\"\n                                                placeholder={props.values.referrerPhone || `(123) 456-7890`}\n                                            />\n                                            {props.errors.referrerPhone && props.touched.referrerPhone ? (\n                                                <span className=\"red\">{props.errors.referrerPhone}</span>\n                                            ) : (\n                                                \"\"\n                                            )}\n                                        </Col>\n                                        <Col sm={12} md={6} className=\"s-margin-b\">\n                                            <label>Email:</label>\n                                            <br/>\n                                            <Field\n                                                type=\"text\"\n                                                required\n                                                onChange={props.handleChange}\n                                                placeholder=\"john_doe@gmail.com\"\n                                                name=\"referrerEmail\"\n                                                value={props.values.referrerEmail}\n                                            />\n                                            {props.errors.referrerEmail && props.touched.referrerEmail ? (\n                                                <span className=\"red\">{props.errors.referrerEmail}</span>\n                                            ) : (\n                                                \"\"\n                                            )}\n                                        </Col>\n                                    </Row>\n                                </div>\n                                \n                                <Row>\n                                    <Col xs={12} sm={6} className=\"s-margin-b\">\n                                        <label>Who was your sales representative?:</label>\n                                        <br/>\n                                        <Field\n                                            type=\"text\"\n                                            required\n                                            onChange={props.handleChange}\n                                            placeholder=\"Bob James\"\n                                            name=\"salesRep\"\n                                            value={props.values.salesRep}\n                                        />\n                                        {props.errors.salesRep && props.touched.salesRep ? (\n                                            <span className=\"red\">{props.errors.salesRep}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                </Row>\n                                <Row center=\"xs\" className=\"s-margin-t-b\">\n                                    <Col xs={12}>\n                                        <a className=\"btn btn-sm animated-button victoria-one\" href=\"# \" onClick={(e) => props.handleSubmit(e)}>\n                                            <button type=\"submit\" className=\"just-text-btn\" disabled={!props.dirty && !props.isSubmitting}>Submit</button>\n                                        </a>\n                                    </Col>\n                                </Row>\n                            </Grid>\n                        </form>\n                    )}\n                </Formik>\n            </div>\n        )\n    }\n}\n\nexport default ReferralForm","import React, { Component } from 'react'\nimport ReferralForm from '../forms/ReferralForm'\nimport { Helmet } from 'react-helmet-async';\nimport Background from '../../assets/images/backgrounds/friends.jpg';\n\nexport default class BonusReferrals extends Component {\n    render() {\n        var topBgImageStyle = {\n            width: \"100%\",\n            height: \"200px\",\n            backgroundImage: `url(${Background})`,\n            backgroundPosition: \"50% 50%\", // change me around to move up and down!\n            backgroundSize: \"cover\"\n          };\n        return (\n            <>\n            <div style ={ topBgImageStyle }></div>\n            <div className=\"wrapper-w-img\">\n                <Helmet>\n                    <title>Bonus Referrals | Prestige Power</title>\n                </Helmet>\n                <h1>Bonus Referrals</h1>\n                <h3 className=\"green\">Refer a family or friend to receive a $500 referral bonus!</h3>\n                <ReferralForm user={this.props.user} />\n            </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { Formik, Form, Field } from 'formik';\nimport { withRouter, Link } from \"react-router-dom\";\nimport { store } from 'react-notifications-component';\n\nimport { visitorSolarQuoteFormSchema, userSolarQuoteFormSchema } from '../../utils/formSchemas'\nimport { storage, firestore, firebase, fire } from \"../../Fire.js\";\nimport { validatePhone, genId } from '../../utils/misc';\nimport * as constant from \"../../utils/constants.js\";\n\nclass SolarQuoteForm extends Component {\n    constructor(props) {\n        super(props);\n        this.showPassword = this.showPassword.bind(this);\n\n        this.state = {\n            passwordShown: false,\n            filePath: null,\n            fileUrl: \"\",\n            fileProgress: 0\n        }\n    }\n    \n    addVisitorQuote = (values, resetForm) => {\n        if(this.state.filePath && !this.state.fileUrl){\n            // Case: User selected file, but didn't upload before submit\n            store.addNotification({\n                title: \"Error\",\n                message: \"A file was selected, but never uploaded. Tap the 'Upload bill' button before submitting or delete the file selection to continue.\",\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n        } else {\n            // Case: User either didn't select a file or selected a file properly\n            if(this.state.passwordShown && (!values.password || !values.confirmPassword)){\n                // Case: User may have intended to insert password for account, but didn't fill one of the password fields\n                const confirmPasswordResponse = window.confirm(\"The password field was opened, but not finished. Did you want to continue anyways?\");\n                if(confirmPasswordResponse){\n                    // Case: User doesn't care that the password wasn't inputted, creating client and building without account\n                    firestore.collection('users').add({\n                        firstName: values.firstName,\n                        lastName: values.lastName,\n                        phone: values.phone,\n                        email: values.email,\n                        business: values.business,\n                        acquisition: values.acquisition,\n                        solarReasons: values.solarReasons,\n                        isAdmin: false,\n                        assignedTo: { userId: \"\" },\n                        timestamp: Date.now(),\n                    }).then((docRef) => {\n                        if(values.zip || values.averageBill || values.shaded || this.state.fileUrl){\n                            // Case: User inputted at least one of the building fields\n                            firestore.collection('buildings').add({\n                                clientId: docRef.id,\n                                zip: values.zip,\n                                buildingName: values.buildingName,\n                                status: constant.PENDING,\n                                averageBill: values.averageBill,\n                                proposalPref: values.proposalPref,\n                                isCommercial: values.isCommercial,\n                                shaded: values.shaded,\n                                billUrl: this.state.fileUrl,\n                                proposalUrl: \"\",\n                                timestamp: Date.now(),\n                            })\n                            store.addNotification({\n                                title: \"Success\",\n                                message: \"Submitted building proposal, you will hear from us soon.\",\n                                type: \"success\",\n                                insert: \"top\",\n                                container: \"top-center\",\n                                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                                dismiss: {\n                                  duration: 5000,\n                                  onScreen: true\n                                }\n                              })\n                        } else {\n                            store.addNotification({\n                                title: \"Success\",\n                                message: \"Submitted your inquiry, you will hear from us soon.\",\n                                type: \"success\",\n                                insert: \"top\",\n                                container: \"top-center\",\n                                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                                dismiss: {\n                                  duration: 5000,\n                                  onScreen: true\n                                }\n                              })\n                        }\n                        \n                        this.setState({\n                            fileUrl: \"\",\n                            filePath: \"\",\n                            fileProgress: 0,\n                            passwordShown: false\n                        });\n                        resetForm();\n                        \n                    });\n                } else {\n                    // Case: User wants to stay and input password.\n                    console.log(\"User wants to stay and input password.\")\n                }  \n            } else if(!this.state.passwordShown){\n                // Case: User didn't show intent for making an account, proceed with just submitting form without account.\n                firestore.collection('users').add({\n                    firstName: values.firstName,\n                    lastName: values.lastName,\n                    phone: values.phone,\n                    email: values.email,\n                    business: values.business,\n                    acquisition: values.acquisition,\n                    solarReasons: values.solarReasons,\n                    isAdmin: false,\n                    assignedTo: { userId: \"\" },\n                    timestamp: Date.now(),\n                }).then((docRef) => {\n                    if(values.zip || values.averageBill || values.shaded || this.state.fileUrl){\n                        // Case: User inputted at least one of the building fields\n                        firestore.collection('buildings').add({\n                            clientId: docRef.id,\n                            zip: values.zip,\n                            buildingName: values.buildingName,\n                            status: constant.PENDING,\n                            averageBill: values.averageBill,\n                            proposalPref: values.proposalPref,\n                            shaded: values.shaded,\n                            isCommercial: values.isCommercial,\n                            billUrl: this.state.fileUrl,\n                            proposalUrl: \"\",\n                            timestamp: Date.now(),\n                        })\n                        store.addNotification({\n                            title: \"Success\",\n                            message: \"Submitted building proposal, you will hear from us soon.\",\n                            type: \"success\",\n                            insert: \"top\",\n                            container: \"top-center\",\n                            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                            dismiss: {\n                              duration: 5000,\n                              onScreen: true\n                            }\n                          })\n                    } else {\n                        store.addNotification({\n                            title: \"Success\",\n                            message: \"Submitted your inquiry, you will hear from us soon.\",\n                            type: \"success\",\n                            insert: \"top\",\n                            container: \"top-center\",\n                            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                            dismiss: {\n                              duration: 5000,\n                              onScreen: true\n                            }\n                          })\n                    }\n                    this.setState({\n                        fileUrl: \"\",\n                        filePath: \"\",\n                        fileProgress: 0\n                    });\n                    resetForm();\n                    \n                });\n            } else if(this.state.passwordShown && values.password && values.confirmPassword) {\n                // Case: User is creating an account!\n                if(values.password === values.confirmPassword){\n                    store.addNotification({\n                        title: \"Info\",\n                        message: `Please fill out the recaptcha challenge before continuing!`,\n                        type: \"info\",\n                        insert: \"top\",\n                        container: \"top-center\",\n                        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                        dismiss: {\n                          duration: 5000,\n                          onScreen: true\n                        }\n                      })\n                    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha', {\n                        'callback': (response) => {\n                          // reCAPTCHA solved, allow Ask.\n                          fire.auth().createUserWithEmailAndPassword(values.email, values.password)\n                            .then((userData) => {\n                                console.log(\"userData: \")\n                                console.log(userData)\n                                // No existing user, now add to Firestore\n                                var currentUser = fire.auth().currentUser;\n                                console.log(\"currentUser: \")\n                                console.log(currentUser)\n                                currentUser.updateProfile({\n                                  displayName: (values.firstName + \" \" + values.lastName)\n                                }).then(() => {\n                                    console.log(\"Successfully added display name to Firebase. Now adding their info...\");\n                                    if(values.zip || values.averageBill || values.shaded || this.state.fileUrl){\n                                        // Case: User inputted at least one of the building fields\n                                        firestore.collection('buildings').add({\n                                            clientId: userData.user.uid,\n                                            buildingName: values.buildingName,\n                                            status: constant.PENDING,\n                                            proposalPref: values.proposalPref,\n                                            zip: values.zip,\n                                            averageBill: values.averageBill,\n                                            isCommercial: values.isCommercial,\n                                            shaded: values.shaded,\n                                            billUrl: this.state.fileUrl,\n                                            proposalUrl: \"\",\n                                            timestamp: Date.now()\n                                        })\n                                    }\n                                    \n                                    firestore.collection(\"users\").doc(userData.user.uid).set({\n                                        firstName: values.firstName,\n                                        lastName: values.lastName,\n                                        phone: values.phone,\n                                        email: values.email,\n                                        business: values.business,\n                                        acquisition: values.acquisition,\n                                        solarReasons: values.solarReasons,\n                                        isAdmin: false,\n                                        assignedTo: { userId: \"\" },\n                                        timestamp: Date.now()\n                                    }, { merge: true }).then(() => {\n                                        console.log(\"Successful write to Firestore.\");\n                                        this.props.history.push(\"/account\");\n                                    }).catch((error) => {\n                                        console.error(\"Error adding document: \", error);\n                                        store.addNotification({\n                                            title: \"Error\",\n                                            message: `Error adding document: ${error}`,\n                                            type: \"danger\",\n                                            insert: \"top\",\n                                            container: \"top-center\",\n                                            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                                            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                                            dismiss: {\n                                            duration: 5000,\n                                            onScreen: true\n                                            }\n                                        })\n                                        window.recaptchaVerifier.clear()\n                                    });\n                                }).catch((error) => {\n                                  console.error(\"Error adding your display name to database: \", error);\n                                  store.addNotification({\n                                    title: \"Error\",\n                                    message: `Error adding your display name to database: ${error}`,\n                                    type: \"danger\",\n                                    insert: \"top\",\n                                    container: \"top-center\",\n                                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                                    dismiss: {\n                                      duration: 5000,\n                                      onScreen: true\n                                    }\n                                  })\n                                  window.recaptchaVerifier.clear()\n                                });\n                            \n                            }).catch((error) => {\n                                var errorCode = error.code;\n                                var errorMessage = error.message;\n                                console.log(\"Error registering: \" + errorCode + \": \" + errorMessage)\n                                store.addNotification({\n                                    title: \"Error\",\n                                    message: `Error registering: ${error}`,\n                                    type: \"danger\",\n                                    insert: \"top\",\n                                    container: \"top-center\",\n                                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                                    dismiss: {\n                                      duration: 5000,\n                                      onScreen: true\n                                    }\n                                  })\n                                window.recaptchaVerifier.clear()\n                              });\n                        },\n                        'expired-callback': () => {\n                          // Response expired. Ask user to solve reCAPTCHA again.\n                          store.addNotification({\n                            title: \"Error\",\n                            message: \"Please solve the reCAPTCHA again.\",\n                            type: \"danger\",\n                            insert: \"top\",\n                            container: \"top-center\",\n                            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                            dismiss: {\n                              duration: 5000,\n                              onScreen: true\n                            }\n                          })\n                          window.recaptchaVerifier.clear()\n                        }\n                      })\n                      window.recaptchaVerifier.render()\n                } else {\n                    store.addNotification({\n                        title: \"Error\",\n                        message: \"Passwords you entered do not match! Try again.\",\n                        type: \"danger\",\n                        insert: \"top\",\n                        container: \"top-center\",\n                        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                        dismiss: {\n                          duration: 5000,\n                          onScreen: true\n                        }\n                      })\n                }\n            } else {\n                store.addNotification({\n                    title: \"Error\",\n                    message: \"Unknown case, please check fields and try again!\",\n                    type: \"danger\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n            }\n        }\n    }\n\n    addUserQuote = (values, resetForm) => {\n        if(this.state.filePath && !this.state.fileUrl){\n            // Case: User selected file, but didn't upload before submit\n            store.addNotification({\n                title: \"Error\",\n                message: \"A file was selected, but never uploaded. Tap the 'Upload bill' button before submitting or delete the file selection to continue.\",\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n        } else {\n            if(!values.zip){\n                store.addNotification({\n                    title: \"Error\",\n                    message: \"You must enter at least the ZIP code for us to help the property.\",\n                    type: \"danger\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n            } else {\n                // Case: User inputted at least one of the building fields\n                firestore.collection('buildings').add({\n                    clientId: this.props.user.uid,\n                    status: constant.PENDING,\n                    proposalPref: values.proposalPref,\n                    zip: values.zip,\n                    buildingName: values.buildingName,\n                    averageBill: values.averageBill,\n                    isCommercial: values.isCommercial,\n                    shaded: values.shaded,\n                    billUrl: this.state.fileUrl,\n                    proposalUrl: \"\",\n                    timestamp: Date.now(),\n                }).then(() => {\n                    this.setState({\n                        fileUrl: \"\",\n                        filePath: \"\",\n                        fileProgress: 0\n                    });\n                    resetForm();\n                    store.addNotification({\n                        title: \"Success\",\n                        message: \"Submitted building proposal, you will hear from us soon.\",\n                        type: \"success\",\n                        insert: \"top\",\n                        container: \"top-center\",\n                        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                        dismiss: {\n                          duration: 5000,\n                          onScreen: true\n                        }\n                      })\n                }).catch((error) => {\n                    store.addNotification({\n                        title: \"Error\",\n                        message: `Error adding building: ${error}`,\n                        type: \"danger\",\n                        insert: \"top\",\n                        container: \"top-center\",\n                        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                        dismiss: {\n                          duration: 5000,\n                          onScreen: true\n                        }\n                      })\n                })\n            }\n        }\n    }\n\n    handleFileChange = e => {\n        if (e.target.files[0]) {\n          const filePath = e.target.files[0];\n          this.setState(() => ({ filePath }));\n        }\n      };\n\n    handleFileUpload = (file) => {\n        const randomId = genId(5)\n        const uploadTask = storage.ref(`bills/${randomId}-${file.name}`).put(file);\n        uploadTask.on(\n          \"state_changed\",\n          snapshot => {\n            // progress function ...\n            const fileProgress = Math.round(\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n            );\n            this.setState({ fileProgress });\n          },\n          error => {\n            // Error function ...\n            console.log(error);\n          },\n          () => {\n            // complete function ...\n            storage\n              .ref(`bills/${randomId}-${file.name}`)\n              .getDownloadURL()\n              .then(fileUrl => {\n                this.setState({ fileUrl });\n              });\n          }\n        );\n      };\n\n    showPassword(e) {\n        e.preventDefault(e)\n        this.setState({ passwordShown: true });\n    }\n    \n      \n    render() {\n        const initialFormState = {\n            firstName: \"\",\n            lastName: \"\",\n            phone: \"\",\n            email: \"\",\n            acquisition: \"\",\n            buildingName: \"\",\n            zip: \"\",\n            averageBill: \"\",\n            shaded: \"\",\n            solarReasons: [],\n            proposalPref: \"\",\n            business: \"\",\n            isCommercial: this.props.commercialPage === true ? \"yes\" : \"\",\n            password: \"\",\n            confirmPassword: \"\"\n          };\n\n        return (\n            <div className=\"horiz-center\">\n                <Formik\n                    initialValues={initialFormState}\n                    \n                    onSubmit={(values, actions) => {\n                        if(this.props.user){\n                            this.addUserQuote(values, actions.resetForm);\n                        } else {\n                            this.addVisitorQuote(values, actions.resetForm);\n                        }\n                        \n                    }}\n                    validationSchema={this.props.user ? userSolarQuoteFormSchema : visitorSolarQuoteFormSchema}\n                    >\n                    {props => (\n                        <Form>\n                            <Grid fluid>\n                                <Row className={this.props.user ? \"hide\" : \"s-margin-b\"}>\n                                    <Col sm={12} md={6}>\n                                        <label>First name: <span className=\"red\">*</span></label>\n                                        <br/>\n                                        <Field\n                                            type=\"text\"\n                                            required\n                                            onChange={props.handleChange}\n                                            placeholder=\"John\"\n                                            name=\"firstName\"\n                                            value={props.values.firstName}\n                                        />\n                                        {props.errors.firstName && props.touched.firstName ? (\n                                            <span className=\"red\">{props.errors.firstName}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <label>Last name: <span className=\"red\">*</span></label>\n                                        <br/>\n                                        <Field\n                                            type=\"text\"\n                                            required\n                                            onChange={props.handleChange}\n                                            placeholder=\"Doe\"\n                                            name=\"lastName\"\n                                            value={props.values.lastName}\n                                        />\n                                        {props.errors.lastName && props.touched.lastName ? (\n                                            <span className=\"red\">{props.errors.lastName}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                </Row>\n                                <Row className={this.props.user ? \"hide\" : \"s-margin-b\"}>\n                                    <Col sm={12} md={6}>\n                                        <label>Phone: <span className=\"red\">*</span></label>\n                                        <br/>\n                                        <Field\n                                            name=\"phone\"\n                                            required\n                                            validate={validatePhone}\n                                            onChange={props.handleChange}\n                                            value={props.values.phone}\n                                            type=\"text\"\n                                            placeholder={props.values.phone || `(123) 456-7890`}\n                                        />\n                                        {props.errors.phone && props.touched.phone ? (\n                                            <span className=\"red\">{props.errors.phone}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <label>Email: <span className=\"red\">*</span></label>\n                                        <br/>\n                                        <Field\n                                            type=\"text\"\n                                            required\n                                            onChange={props.handleChange}\n                                            placeholder=\"john_doe@gmail.com\"\n                                            name=\"email\"\n                                            value={props.values.email}\n                                        />\n                                        {props.errors.email && props.touched.email ? (\n                                            <span className=\"red\">{props.errors.email}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                </Row>\n                                <Row className={this.props.user ? \"hide\" : \"s-margin-b\"}>\n                                    <Col xs={12} sm={6} >\n                                        <label>Business/Organization:</label>\n                                        <br/>\n                                        <Field\n                                            type=\"text\"\n                                            onChange={props.handleChange}\n                                            placeholder=\"Biz Movers LLC\"\n                                            name=\"business\"\n                                            value={props.values.business}\n                                        />\n                                        {props.errors.business && props.touched.business ? (\n                                            <span className=\"red\">{props.errors.business}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                    <Col xs={12} sm={6} className={props.values.business ? \"\" : \"hide\"}>\n                                        <label>Is this a commercial inquiry?</label>\n                                        <br/>\n                                        <Field\n                                            component={RadioButton}\n                                            name=\"isCommercial\"\n                                            id=\"yes\"\n                                            label=\"Yes\"\n                                        />\n                                        <Field\n                                            component={RadioButton}\n                                            name=\"isCommercial\"\n                                            id=\"no\"\n                                            label=\"No\"\n                                        />\n                                        {props.errors.isCommercial && props.touched.isCommercial ? (\n                                            <span className=\"red\">{props.errors.isCommercial}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                </Row>\n                                <Row className={this.props.user ? \"hide\" : \"s-margin-b\"}>\n                                    <Col sm={12} md={6}>\n                                        <label>How did you hear about us?: </label>\n                                        <br/>\n                                        <Field \n                                            component=\"select\" \n                                            name=\"acquisition\" \n                                            value={props.values.acquisition}\n                                            onChange={props.handleChange}\n                                            >\n                                            <option defaultValue value=\"\">Not selected</option> \n                                            <option value=\"search\">Search Engine</option>\n                                            <option value=\"friend\">Recommended by friend, family, or colleague</option>\n                                            <option value=\"social\">Social Media</option>\n                                            <option value=\"publication\">Blog or publication</option>\n                                            <option value=\"partners\">One of our partners</option>\n                                            <option value=\"other\">Other</option>\n                                        </Field>\n                                        {props.errors.acquisition && props.touched.acquisition ? (\n                                            <span className=\"red\">{props.errors.acquisition}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                </Row>\n                                <div className={this.props.user ? \"hide\" : \"\"}>\n                                    <br/>\n                                    <hr/>\n                                    <br/>\n                                </div>\n                                <Row className=\"s-margin-b\">\n                                    <Col xs={12} sm={6}>\n                                        <label className=\"no-padding no-margin\">Building Nickname:</label>\n                                        <span className=\"s-text display-block\">*This an unofficial name to identify the property</span>\n                                        <Field\n                                            type=\"text\"\n                                            onChange={props.handleChange}\n                                            placeholder=\"Main St Garage\"\n                                            name=\"buildingName\"\n                                            value={props.values.buildingName}\n                                        />\n                                        {props.errors.buildingName && props.touched.buildingName ? (\n                                            <span className=\"red\">{props.errors.buildingName}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                    <Col xs={12} sm={6}>\n                                        <label className=\"s-padding-b\">ZIP Code:</label>\n                                        <Field\n                                            type=\"text\"\n                                            onChange={props.handleChange}\n                                            placeholder=\"12345\"\n                                            name=\"zip\"\n                                            value={props.values.zip}\n                                        />\n                                        {props.errors.zip && props.touched.zip ? (\n                                            <span className=\"red\">{props.errors.zip}</span>\n                                        ) : (\n                                            \"\"\n                                        )}  \n                                    </Col>\n                                </Row>\n                                <Row className=\"s-margin-b\">\n                                    <Col xs={12} sm={6}>\n                                        <label>What's the average power bill?</label>\n                                        <br/>\n                                        <Field \n                                            component=\"select\" \n                                            name=\"averageBill\" \n                                            value={props.values.averageBill}\n                                            onChange={props.handleChange}\n                                            >\n                                            <option defaultValue value=\"\">Not selected</option> \n                                            <option value=\"50\">Under $100</option>\n                                            <option value=\"150\">$100-200/mo</option>\n                                            <option value=\"250\">$200-300/mo</option>\n                                            <option value=\"350\">$300-400/mo</option>\n                                            <option value=\"450\">$400+</option>\n                                        </Field>\n                                        {props.errors.averageBill && props.touched.averageBill ? (\n                                            <span className=\"red\">{props.errors.averageBill}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                    <Col xs={12} sm={6}>\n                                        <label>Is the building shaded?</label>\n                                        <br/>\n                                        <Field\n                                            component={RadioButton}\n                                            name=\"shaded\"\n                                            id=\"true\"\n                                            label=\"Yes\"\n                                        />\n                                        <Field\n                                            component={RadioButton}\n                                            name=\"shaded\"\n                                            id=\"false\"\n                                            label=\"No\"\n                                        />\n                                        {props.errors.shaded && props.touched.shaded ? (\n                                            <span className=\"red\">{props.errors.shaded}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                </Row>\n                                <Row className=\"s-margin-b\">\n                                    <Col xs={12} sm={6}>\n                                        <label>How would you like to have your proposal presented when it is ready?</label>\n                                        <br/>\n                                        <Field \n                                            component=\"select\" \n                                            name=\"proposalPref\" \n                                            value={props.values.proposalPref}\n                                            onChange={props.handleChange}\n                                            >\n                                            <option defaultValue value=\"\">Not selected</option> \n                                            <option value={constant.PDF}>PDF viewable via email &amp; on this site</option>\n                                            <option value={constant.PHONE}>Phone call with Prestige Power sales</option>\n                                            <option value={constant.INPERSON}>In person meeting (socially distanced!)</option>\n                                        </Field>\n                                        {props.errors.proposalPref && props.touched.proposalPref ? (\n                                            <span className=\"red\">{props.errors.proposalPref}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                    <Col xs={12} sm={6} className={this.props.user ? \"hide\" : \"\"}>\n                                        <label>What are your reasons for going solar?</label>\n                                        <br/>\n                                        <Checkbox name=\"solarReasons\" label=\"Savings\" value=\"savings\" />\n                                        <Checkbox name=\"solarReasons\" label=\"Tax credit\" value=\"tax-credit\" />\n                                        <Checkbox name=\"solarReasons\" label=\"Environment\" value=\"environment\" />\n                                        <Checkbox name=\"solarReasons\" label=\"Other\" value=\"other\" />\n                                    </Col>\n                                </Row>\n                                <Row className=\"s-margin-b\">\n                                    <Col xs={12} sm={6}>\n                                        <label className=\"no-margin\">Upload your power bill:</label>\n                                        <div className=\"grey s-text\">This will expedite the qualification process.</div>\n                                        {!this.state.fileUrl && (\n                                            <input type=\"file\" onChange={this.handleFileChange} />\n                                        )}\n                                        <br/>\n                                        {this.state.fileProgress > 0 && ( \n                                            <div className=\"box-text-v-align\">\n                                                <progress value={this.state.fileProgress} max=\"100\"/> <b className=\"s-padding-l\">{this.state.fileProgress}%</b>\n                                            </div>\n                                        )}\n                                        {this.state.filePath && !this.state.fileUrl && (\n                                            <button type=\"button\" onClick={() => this.handleFileUpload(this.state.filePath)}>\n                                                Upload bill\n                                            </button>\n                                        )}\n                                        {this.state.fileUrl && (\n                                            <div>\n                                                <b className=\"green\">Upload success!</b>\n                                            </div>\n                                        )}\n                                    </Col>\n                                </Row>\n                                <Row className={this.props.user ? \"hide\" : \"s-margin-b\"}>\n                                    <Col xs={12} className={this.state.passwordShown ? \"hide\" : \"\"}>\n                                        <button className=\"just-text-btn text-hover green m-text\" onClick={(e) => this.showPassword(e)}><i className=\"fas fa-key\" />&nbsp; <u>Keep track of the process by creating an account!</u></button>\n                                    </Col>\n                                    <Col xs={12} sm={6} className={this.state.passwordShown ? \"\" : \"hide\"}>\n                                        <label>Password</label>\n                                        <br/>\n                                        <Field\n                                            type=\"password\"\n                                            onChange={props.handleChange}\n                                            placeholder=\"******************\"\n                                            name=\"password\"\n                                            value={props.values.password}\n                                        />\n                                        {props.errors.password && props.touched.password ? (\n                                            <span className=\"red\">{props.errors.password}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                    <Col xs={12} sm={6} className={this.state.passwordShown ? \"\" : \"hide\"}>\n                                        <label>Confirm Password</label>\n                                        <br/>\n                                        <Field\n                                            type=\"password\"\n                                            onChange={props.handleChange}\n                                            placeholder=\"******************\"\n                                            name=\"confirmPassword\"\n                                            value={props.values.confirmPassword}\n                                        />\n                                        {props.errors.confirmPassword && props.touched.confirmPassword ? (\n                                            <span className=\"red\">{props.errors.confirmPassword}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Col>\n                                </Row>\n                                \n                                <Row center=\"xs\" className=\"s-margin-t-b\">\n                                    <Col xs={12}>\n                                        <a className=\"btn btn-md animated-button victoria-one\" href=\"# \" onClick={(e) => props.handleSubmit(e)}>\n                                            <button type=\"submit\" className=\"just-text-btn\" disabled={!props.dirty && !props.isSubmitting}>Submit</button>\n                                        </a>\n                                    </Col>\n                                </Row>\n                                <Row center=\"xs\" className={this.props.user ? \"hide\" : \"s-margin-t-b\"}>\n                                    <Col xs={12}>\n                                        <Link to=\"/login\" className=\"grey-text-btn s-padding-b\">\n                                            Already have an account?\n                                        </Link>\n                                    </Col>\n                                </Row>\n                                <Row center=\"xs\">\n                                    <Col xs={12}>\n                                    <div id=\"recaptcha\" className=\"p-container recaptcha\"></div>\n                                    </Col>\n                                </Row>\n                            </Grid>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        )\n    }\n}\n\n// TODO: import these from utils folder file\nfunction Checkbox(props) {\n    return (\n      <Field name={props.name}>\n        {({ field, form }) => (\n          <label className=\"checkbox-container\">\n            <input\n              type=\"checkbox\"\n              {...props}\n              checked={field.value.includes(props.value)}\n              onChange={() => {\n                if (field.value.includes(props.value)) {\n                  const nextValue = field.value.filter(\n                    value => value !== props.value\n                  );\n                  form.setFieldValue(props.name, nextValue);\n                } else {\n                  const nextValue = field.value.concat(props.value);\n                  form.setFieldValue(props.name, nextValue);\n                }\n              }}\n            />\n            {props.label}\n            <span className=\"checkmark\"></span>\n          </label>\n        )}\n      </Field>\n    );\n  }\n\n// TODO: if there are two radio button sets, with the same id's (i.e. yes and no fields like we had with Commercial Inquiry and Building Shaded), the input toggling breaks\n  const RadioButton = ({\n    field: { name, value, onChange, onBlur },\n    id,\n    label,\n    onSelect,\n    ...props\n  }) => {\n    return (\n      <label htmlFor={id} className=\"radio-container\">\n        {label}\n        <input\n          name={name}\n          id={id}\n          type=\"radio\"\n          value={id}\n          checked={id === value}\n          onChange={onChange}\n          onClick={onSelect}\n          onBlur={onBlur}\n          {...props}\n        />\n        <span className=\"radio\"></span>\n      </label>\n    );\n  };\n\n  export default withRouter(SolarQuoteForm);","import React, { Component } from 'react'\nimport SolarQuoteForm from '../forms/SolarQuoteForm'\nimport { Helmet } from 'react-helmet-async';\nimport Background from '../../assets/images/backgrounds/commercial-1.jpg';\n\nexport default class CommercialSolar extends Component {\n    render() {\n        var topBgImageStyle = {\n            width: \"100%\",\n            height: \"200px\",\n            backgroundImage: `url(${Background})`,\n            backgroundPosition: \"50% 50%\", // change me around to move up and down!\n            backgroundSize: \"cover\"\n          };\n        return (\n            <>\n            <div style ={ topBgImageStyle }></div>\n            <div className=\"wrapper-w-img\">\n                <Helmet>\n                    <title>Commercial Solar | Prestige Power</title>\n                </Helmet>\n                <h1>Commercial Solar</h1>\n                <p>\n                    Do you know a business owner who is looking to reduce recurring energy costs? Prestige\n                    Power connects commercial property owners with the best commercial solar installers in the\n                    industry. Our installers offer zero down, financing, and cash options for businesses that qualify.\n                    We also offer Prestige Power customers a referral bonus for referring residential and\n                    commercial customers who get installed.\n                </p>\n\n                <h4>Benefits include:</h4>\n                <ul>\n                    <li>26% Federal Tax Credit (ITC)</li>\n                    <li>Zero upfront cost, financing, and cash purchase options</li>\n                    <li>Return on investment within 2-10 years depending on market</li>\n                    <li>Increase property value</li>\n                    <li>Reduces operating costs</li>\n                    <li>Positive impact on the environment</li>\n                </ul>\n                <hr/>\n                <h2>Your Business Information</h2>\n                <SolarQuoteForm user={this.props.user} commercialPage={true}/>\n\n                <h4 className=\"center-text\">Contact us directly @ <u>commercial@goprestigepower.com</u> for more questions!</h4>\n            </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport SolarQuoteForm from '../forms/SolarQuoteForm'\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport Background from '../../assets/images/backgrounds/hero.png';\n\nexport default class SolarQuote extends Component {\n    render() {\n        var topBgImageStyle = {\n            width: \"100%\",\n            height: \"200px\",\n            backgroundImage: `url(${Background})`,\n            backgroundPosition: \"50% 70%\", // change me around to move up and down!\n            backgroundSize: \"cover\"\n          };\n        return (\n            <>\n            <div style ={ topBgImageStyle }></div>\n            <div className=\"wrapper-w-img\">\n                <Helmet>\n                    <title>Solar Quote | Prestige Power</title>\n                </Helmet>\n                <h1>Solar Quote</h1>\n                <p>Want to talk to one of our sales representatives right away? Give us a call at <span className=\"green\">(949) 636-8339</span>!</p>\n\n                <SolarQuoteForm user={this.props.user} commercialPage={false} />\n\n                <br/>\n                <hr/>\n                <br/>\n                \n                <h3 className=\"display-inline\">Need a commercial solar quote?</h3>\n                &nbsp;&nbsp;&nbsp;\n                <Link to=\"/commercial-solar\" className=\"btn animated-button victoria-one\">Get a Commercial Quote</Link>\n            </div>\n            </>\n        )\n    }\n}\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport { Formik, Field } from 'formik';\nimport { forgotPasswordSchema } from \"../../utils/formSchemas\"\n\nconst initialFormState = {\n  email: \"\"\n};\n\nexport const ForgotPassword = React.memo(function(props) {\n  return (\n    <div>\n      <button \n        className={props.linkClass} \n        type=\"button\"\n        onClick={props.handleOpenModal}>\n        {props.wording}\n      </button>\n      <Modal\n        isOpen={props.showModal}\n        className=\"l-container background-blue p-top-center center-text\"\n        contentLabel=\"Forgot Password\"\n        onRequestClose={() => props.handleCloseModal()}\n      >\n          <div className=\"white\">\n            <h4>\n              Forgot Password\n              <i\n                onClick={() => props.handleCloseModal()}\n                className=\"fas fa-times right text-hover-red\"\n              />\n            </h4>\n            \n          </div>\n          <div>\n            <p className=\"white\">\n                Please enter your address email below and we will send that email a password reset link. When you click that link in your email, you will be able to create a new password.\n                <br/>\n                If this doesn't work within 10 or so minutes, contact us at <u>help@minute.tech</u>.\n            </p>\n            <br />\n            <Formik\n                initialValues={initialFormState}\n                validationSchema={forgotPasswordSchema}\n                onSubmit={(values, actions) => {\n                    props.sendPasswordReset(values);\n                    actions.resetForm();\n                }}\n                >\n                {props => (\n                    <form onSubmit={props.handleSubmit}>\n                        <label htmlFor=\"email\" className=\"white\">Email on file: </label>\n                        <Field\n                            type=\"email\"\n                            className=\"m-width center\"\n                            onChange={props.handleChange}\n                            name=\"email\"\n                            value={props.values.email}\n                            placeholder=\"forgot-email@email.com\"\n                        />\n                        {props.errors.email && props.touched.email ? (\n                            <span className=\"yup-error\">{props.errors.email}</span>\n                        ) : (\n                            \"\"\n                        )}\n                        <br/>\n                        <button\n                            type=\"submit\"\n                            className=\"s-btn\"\n                            disabled={!props.dirty || props.isSubmitting}\n                        >\n                            Send reset link to email\n                        </button>\n                    </form>\n                )}\n            </Formik>\n          </div>\n        \n      </Modal>\n      \n    </div>\n  );\n});\n","import React, { Component } from 'react'\nimport { Formik, Field } from \"formik\";\nimport { withRouter, Link } from 'react-router-dom';\n\nimport { firebase, fire } from \"../../Fire.js\";\nimport { logInSchema } from \"../../utils/formSchemas\"\nimport { ForgotPassword } from '../forms/ForgotPassword.js';\nimport { store } from 'react-notifications-component';\nimport { Helmet } from 'react-helmet-async';\n\nclass LogIn extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n          showModal: false\n        }\n    }\n    \n    handleChange(e) {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  \n    handleSubmit(e) {\n      e.preventDefault();\n    }\n  \n    handleOpenModal = () => {\n      this.setState({ showModal: true });\n    }\n\n    handleCloseModal = () => {\n      this.setState({ showModal: false });\n    }\n\n    signIn = (values) => {\n      window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha', {\n        'callback': (response) => {\n          // reCAPTCHA solved, allow signIn.\n          fire.auth().signInWithEmailAndPassword(values.email, values.password).then((user) => {\n              console.log(\"Sign in success!\")\n              this.props.history.push(\"/logging-in\");\n              window.location.reload();\n          }).catch((error) => {\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              console.log(\"Error signing in: \" + errorCode + \": \" + errorMessage)\n              store.addNotification({\n                title: \"Error\",\n                message: `Error signing in: ${errorMessage}`,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n              window.recaptchaVerifier.clear()\n          });\n        },\n        'expired-callback': () => {\n          // Response expired. Ask user to solve reCAPTCHA again.\n          store.addNotification({\n            title: \"Error\",\n            message: `Please solve the reCAPTCHA again.`,\n            type: \"danger\",\n            insert: \"top\",\n            container: \"top-center\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 5000,\n              onScreen: true\n            }\n          })\n          window.recaptchaVerifier.clear()\n        }\n      })\n      window.recaptchaVerifier.render()\n    }\n\n    sendPasswordReset = (values) => {\n      fire.auth().sendPasswordResetEmail(values.email).then(() => {\n        store.addNotification({\n          title: \"Success\",\n          message: \"Reset link has been sent to your email.\",\n          type: \"success\",\n          insert: \"top\",\n          container: \"top-center\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 5000,\n            onScreen: true\n          }\n        })\n      }).catch((error) => {\n        store.addNotification({\n          title: \"Error\",\n          message: `Error sending password reset link: ${error.message}`,\n          type: \"danger\",\n          insert: \"top\",\n          container: \"top-center\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 5000,\n            onScreen: true\n          }\n        })\n      });\n    }\n\n  render() {\n    const initialFormState = {\n      email: \"\",\n      password: \"\"\n    }; \n    \n    return (\n        <div className=\"m-container\">\n          <Helmet>\n            <title>Log in | Prestige Power</title>\n          </Helmet>\n          <h1>Log in</h1>\n          <Formik\n            initialValues={initialFormState}\n            validationSchema={logInSchema}\n            onSubmit={(values, actions) => {\n                this.signIn(values);\n            }}\n            >\n            {props => (\n              <form onSubmit={props.handleSubmit}>\n                <label htmlFor=\"email\">Email: </label>\n                <Field\n                  type=\"email\"\n                  onChange={props.handleChange}\n                  name=\"email\"\n                  value={props.values.email}\n                  placeholder=\"john_doe@email.com\" />\n                {props.errors.email && props.touched.email ? (\n                    <span className=\"yup-error\">{props.errors.email}</span>\n                ) : (\n                    \"\"\n                )}\n                <br />\n                <label htmlFor=\"password\">Password: </label>\n                <Field\n                  type=\"password\"\n                  onChange={props.handleChange}\n                  name=\"password\"\n                  value={props.values.password}\n                  placeholder=\"*********************\" />\n                {props.errors.password && props.touched.password ? (\n                    <span className=\"yup-error\">{props.errors.password}</span>\n                ) : (\n                    \"\"\n                )}\n                <br />\n                <div className=\"center-text\">\n                    <a className=\"btn btn-md animated-button victoria-one\" href=\"# \" onClick={(e) => props.handleSubmit(e)}>\n                        <button type=\"submit\" className=\"just-text-btn\" disabled={!props.dirty && !props.isSubmitting}>Log in</button>\n                    </a>\n                </div>\n                <br/>\n                <div className=\"center-text\">\n                  <Link to=\"/solar-quote\" className=\"s-padding-b\">\n                    Don't have an account?\n                  </Link>\n                </div>\n                <div className=\"center-text\">\n                  <ForgotPassword\n                    handleOpenModal={this.handleOpenModal}\n                    showModal={this.state.showModal}\n                    handleChange={this.handleChange}\n                    sendPasswordReset={this.sendPasswordReset}\n                    handleCloseModal={this.handleCloseModal}\n                    wording={\"Forgot password?\"}\n                    linkClass={\"just-text-btn underline-hover text-hover\"} />\n                </div>\n                <br/>\n                <div id=\"recaptcha\" className=\"p-container recaptcha\"></div>\n                <br/>\n              </form>\n            )}\n          </Formik>\n        </div>\n      )\n  }\n}\n\nexport default withRouter(LogIn)\n","import React, { Component } from 'react'\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport { Helmet } from 'react-helmet-async';\n\nimport 'react-accessible-accordion/dist/fancy-example.css';\n\nexport default class FAQ extends Component {\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <Helmet>\n                    <title>F.A.Q | Prestige Power</title>\n                </Helmet>\n                <h1 className=\"s-padding-b\">Frequently Asked Questions</h1>\n                <Accordion allowZeroExpanded>\n                    {questions.map((question, index) => (\n                        <AccordionItem key={index}>\n                            <AccordionItemHeading>\n                                <AccordionItemButton>\n                                    {question.title}\n                                </AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                            {question.body}\n                            </AccordionItemPanel>\n                        </AccordionItem>\n                    ))}\n                </Accordion>\n            </div>\n        )\n    }\n}\n\n\nconst questions = [\n    {\n        title: \"How long does it take to get installed?\",\n        body: `It takes an average of 7 to 21 days from the day you sign up to the day panels are installed on\n        your roof. The actual install is completed in 3 to 6 hours on the same day unless the project is\n        unusually large or weather becomes an issue.`,\n    },\n    {\n        title: \"Why is my electricity bill needed?\",\n        body: `Your most recent electric bill is needed to obtain accurate numbers for your property that\n        ensure your system is properly designed and built based on your annual kilowatt usage. We\n        assess exactly how much power the customer’s household used over the previous 12 months\n        and provide a customized proposal for each property.`\n    },\n    {\n        title: \"What happens if I decide to move?\",\n        body: `Every solar system enrolled in the no-cost “Solar as Service” program comes with a full\n        transfer guarantee. If you decide to move and sell your home, contact your sales representative\n        or one of Sunrun’s service transfer specialists. Homeowners who purchase solar panels have\n        the option to sell them with their home or, at the customer’s cost, remove them and reinstall\n        them at their new property.`\n    },\n    {\n        title: \"How does the referral bonus work?\",\n        body: `Once you become a Prestige Power customer, we provide a referral bonus for each residential\n        or commercial customer that you refer to us and gets installed. The bonus for referral of a\n        residential customer is $500. The bonus for referral of a commercial customer is $3,000. All\n        bonuses are paid after the referred customer’s installation and will arrive within 2-3 weeks in\n        the form of a check.`\n    },\n    {\n        title: \"How long does an appointment take?\",\n        body: `Prestige Power offers both in home and virtual appointments. Both options take only 10 to\n        15 minutes to gather information and present your customized proposal. We are\n        able to enroll your property on the same day with no payment needed!`\n    },\n    {\n        title: \"What if my roof is damaged during installation?\",\n        body: `Any damage to your property during site survey or installation is fully covered by Sunrun. For\n        an extra layer of protection, Sunrun also offers a five-year roof penetration warranty in addition\n        to other warranties.`\n    },\n    {\n        title: \"Are the solar panels under warranty?\",\n        body: `Yes, all solar panels come with a 25 year warranty from Sunrun. If a panel or inverter\n        malfunctions through no fault of the homeowner, Sunrun will replace it.`\n    },\n    {\n        title: \"How can I monitor my solar panels and energy production?\",\n        body: `Homeowners can download the “mysunrun” app and track their system’s energy production in\n        real time. Sunrun also receives updates on system performance every 6 hours. By constantly\n        monitoring performance, Sunrun knows if there is a system malfunction and can address it\n        immediately.`\n    },\n]\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'react-modal';\nimport { confirmable, createConfirmation } from 'react-confirm';\n\nclass Confirmation extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n\n    this.state = {\n      showModal: !!this.props.show,\n    };\n  }\n\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal() {\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    const {\n      proceedLabel,\n      cancelLabel,\n      title,\n      confirmation,\n      proceed,\n      dismiss,\n      cancel\n    } = this.props;\n    return (\n      <Modal\n        isOpen={this.state.showModal}\n        className=\"l-container background-blue p-top-center center-text\"\n        contentLabel=\"Confirmation\"\n        onRequestClose={() => {\n          this.handleCloseModal();\n          dismiss();\n        }}\n      >\n          <div className=\"white\">\n            <h4>\n              {title}\n              <i\n                onClick={() => {\n                  this.handleCloseModal();\n                  dismiss();\n                }}\n                className=\"fas fa-times right text-hover-red\"\n              />\n            </h4>\n            \n          </div>\n          <div>\n            <span className=\"white\">{confirmation}</span>\n            <br />\n            <br />\n            <button className=\"s-btn\" onClick={proceed}>\n              {proceedLabel}\n            </button>\n            &nbsp;\n            <button\n              className=\"s-btn-red\"\n              onClick={() => {\n                this.handleCloseModal();\n                cancel();\n              }}\n            >\n              {cancelLabel}\n            </button>\n          </div>\n        \n      </Modal>\n    );\n  }\n}\n\nConfirmation.propTypes = {\n  okLabel: PropTypes.string,\n  cancelLabel: PropTypes.string,\n  title: PropTypes.string,\n  confirmation: PropTypes.string,\n  show: PropTypes.bool,\n  proceed: PropTypes.func, // called when ok button is clicked.\n  cancel: PropTypes.func, // called when cancel button is clicked.\n  dismiss: PropTypes.func, // called when backdrop is clicked or escaped.\n  enableEscape: PropTypes.bool\n};\n\nexport function confirm(\n  confirmation,\n  title = 'Alert',\n  proceedLabel = 'OK',\n  cancelLabel = 'cancel'\n) {\n  return createConfirmation(confirmable(Confirmation))({\n    confirmation,\n    title,\n    proceedLabel,\n    cancelLabel\n  });\n}\n","import React, { Component } from 'react'\nimport { Formik, Form, Field } from \"formik\";\nimport { Link } from 'react-router-dom';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { store } from 'react-notifications-component';\nimport { Helmet } from 'react-helmet-async';\n\nimport { fire, firestore } from \"../../Fire.js\";\nimport { confirm } from \"../misc/Confirmation\";\nimport { ucFirst, validatePhone, timestampToDateTime } from \"../../utils/misc\";\nimport { profileSchema } from \"../../utils/formSchemas\"\nimport * as constant from \"../../utils/constants.js\";\n\nclass Account extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            user: {},\n            buildings: []\n        }\n    }\n    \n    componentDidMount(){\n        if(this.props.user){\n            // Listen for Firestore changes\n            this.unsubscribeUsers = firestore.collection(\"users\").doc(this.props.user.uid)\n                .onSnapshot((doc) => {\n                    var docWithMore = Object.assign({}, doc.data());\n                    docWithMore.id = doc.id;\n                    docWithMore.timestamp = timestampToDateTime(doc.data().timestamp)\n                    // Check for corner case where user clicks link to change email back when it is changed\n                    // In this case, we just change it to the Firebase value again.\n                    var currentUser = fire.auth().currentUser;\n                    if(currentUser && currentUser.email && currentUser.email !== doc.data().email){\n                        firestore.collection(\"users\").doc(this.props.user.uid).set({\n                            email: currentUser.email\n                        }, { merge: true }).then(() => {\n                            console.log(\"Updated email on Firestore to new value from Firebase.\")\n                        }).catch((error) => {\n                            console.error(\"Error changing your email to changed value from Firebase: \" + error);\n                        });\n                        docWithMore.email = currentUser.email;\n                    } \n\n                    this.setState({\n                        user: docWithMore\n                    }) \n                });\n\n            this.unsubscribeBuildings = firestore.collection(\"buildings\").where(\"clientId\", \"==\", this.props.user.uid).orderBy(\"timestamp\", \"desc\")\n                .onSnapshot((querySnapshot) => {\n                    var tempBuildings = []\n                    querySnapshot.forEach((doc) => {\n                        tempBuildings.push(doc.data());\n                    });\n                    this.setState({\n                        buildings: tempBuildings\n                    })\n                });\n\n        }\n    }\n\n    componentWillUnmount() {\n        if(this.unsubscribeUsers){\n            this.unsubscribeUsers();\n        }\n\n        if(this.unsubscribeBuildings){\n            this.unsubscribeBuildings();\n        }\n    }   \n\n    updateDetails = (values, setSubmitting) => {\n        confirm(\n          \"Do you really want to update your settings?\",\n          \"Update Settings\",\n          \"Yes\",\n          \"No\"\n        ).then(\n          () => {   \n            // Update firebase user data first\n            if(values.firstName !== this.state.user.firstName || values.lastName !== this.state.user.lastName){\n                // Only update if name values have changed\n                var currentUser = fire.auth().currentUser;\n                currentUser.updateProfile({\n                    displayName: ucFirst(values.firstName) + \" \" + ucFirst(values.lastName)\n                }).then(() => {\n                    console.log(\"Updated name details on Firebase.\")\n                    firestore.collection(\"users\").doc(this.props.user.uid).set({\n                        firstName: ucFirst(values.firstName),\n                        lastName: ucFirst(values.lastName),\n                    }, { merge: true }).then(() => {\n                        console.log(\"Updated name details on Firestore.\")\n                    }).catch((error) => {\n                        store.addNotification({\n                            title: \"Error\",\n                            message: `Error changing your name on database:  ${error}`,\n                            type: \"danger\",\n                            insert: \"top\",\n                            container: \"top-center\",\n                            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                            dismiss: {\n                              duration: 5000,\n                              onScreen: true\n                            }\n                          })\n                    });\n                   \n                }).catch((error) => {\n                    if(error.code === \"auth/user-token-expired\"){\n                        store.addNotification({\n                            title: \"Error\",\n                            message: 'Your log in status has changed. Please sign out and sign back in with your credentials.',\n                            type: \"danger\",\n                            insert: \"top\",\n                            container: \"top-center\",\n                            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                            dismiss: {\n                              duration: 5000,\n                              onScreen: true\n                            }\n                          })\n                        window.location.reload();\n                    } else {\n                        store.addNotification({\n                            title: \"Error\",\n                            message: `Error updating display name on Firebase: ${error}`,\n                            type: \"danger\",\n                            insert: \"top\",\n                            container: \"top-center\",\n                            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                            dismiss: {\n                              duration: 5000,\n                              onScreen: true\n                            }\n                          })\n                        console.error(\"Error updating display name on Firebase: \" + error);\n                    }  \n                });\n            }\n\n            // Update firestore\n            firestore.collection(\"users\").doc(this.props.user.uid).set({\n                firstName: values.firstName,\n                lastName: values.lastName,\n                business: values.business,\n                phone: values.phone,\n            }, { merge: true }).then(() => {\n                store.addNotification({\n                    title: \"Success\",\n                    message: 'Successfully updated profile details.',\n                    type: \"success\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n            }).catch((error) => {\n                store.addNotification({\n                    title: \"Error\",\n                    message: `Error changing your info on database:  ${error}`,\n                    type: \"danger\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n                console.error(\"Error changing your info on database: \" + error);\n            });\n          },\n          () => {\n            setSubmitting(false)\n            console.log(\"Denied by user\");\n          }\n        );\n        setSubmitting(false)\n      }\n\n    sendPasswordReset = () => {\n        var currentUser = fire.auth().currentUser;\n        if(currentUser){\n            fire.auth().sendPasswordResetEmail(this.state.user.email).then(() => {\n                store.addNotification({\n                    title: \"Success\",\n                    message: 'Reset link has been sent to your email.',\n                    type: \"success\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n            }).catch((error) => {\n                store.addNotification({\n                    title: \"Error\",\n                    message: `Error sending password reset: ${error.message}`,\n                    type: \"danger\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n            });\n        } else {\n            store.addNotification({\n                title: \"Error\",\n                message: 'Your log in status has changed. Please sign out and sign back in with your credentials.',\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n            window.location.reload();\n        }\n    }\n\n    renderStatus(status, proposalUrl = \"\"){\n        if(status === constant.PENDING){\n            return(\n                <>\n                    <label>Status:</label>&nbsp;\n                    <span className=\"green\">Pending <i className=\"fas fa-spinner fa-spin\"/></span> \n                    <div className=\"s-text s-margin-b\">We are working on your solar request and will notify you via email and on this page when it is ready!</div>\n                </>\n            )\n        } else if(status === constant.READY){\n            return (\n                <>\n                    <label>Status:</label>&nbsp;\n                    <div className=\"green s-margin-b\">\n                        <a href={proposalUrl} rel=\"noopener noreferrer\" target=\"_blank\" className=\"btn btn-sm animated-button victoria-one\">\n                            <button type=\"button\" className=\"just-text-btn\">Proposal ready to view&nbsp; <i className=\"fas fa-file-alt\"/></button>\n                        </a>\n                    </div> \n                </>\n            )\n        } else if(status === constant.DONE){\n            return (\n                <>\n                    <label>Status:</label>&nbsp;\n                    <span className=\"green\">Done <i className=\"fas fa-check\"/></span> \n                    <div className=\"s-text s-margin-b\">Your request is complete, you can <a href={proposalUrl} rel=\"noopener noreferrer\" target=\"_blank\">view your proposal here</a>. Thank you for choosing Prestige Power!</div>\n                </>\n            )\n        } else if(status === constant.EXPIRED){\n            return (\n                <>\n                    <label>Status:</label>&nbsp;\n                    <span className=\"green\">Expired <i className=\"fas fa-times\"/></span> \n                    <div className=\"s-text s-margin-b\">Your request has been more than 90 days ago and has expired. <Link to=\"/solar-quote\" className=\"green\">Please resubmit your request.</Link></div>\n                </>\n            )\n        } else {\n            return (<span>Loading... </span>)\n        }\n    }\n\n    render() {\n        const initialFormState = {\n            firstName: this.state.user.firstName || \"\",\n            lastName: this.state.user.lastName || \"\",\n            email: this.state.user.email || \"\",\n            phone: this.state.user.phone || \"\",\n            business: this.state.user.business || \"\"\n        };\n        if(!this.state.user && !this.state.user.timestamp){\n            return(<div className=\"wrapper\"><h2>Loading your user data...</h2></div>)\n        } else {\n            return (\n                <div className=\"wrapper\">\n                    <Helmet>\n                        <title>Account | Prestige Power</title>\n                    </Helmet>\n                    <h1>Your Account</h1>\n                    {this.state.user.isAdmin && (\n                         <Link to=\"/admin-panel/\" className=\"btn btn-sm animated-button doug-two s-width\">\n                            <button type=\"button\" className=\"just-text-btn\">Go to admin panel <i className=\"fas fa-user-shield\"/></button>\n                        </Link>\n                    )}\n                    <h2>Open Proposals</h2>\n                    {\n                        this.state.buildings.map((building, index) => {\n                            return(\n                                <div className=\"border-blue s-margin-t-b\" key={index}>\n                                    <Grid fluid>\n                                        <Row>\n                                            <Col xs={12}>\n                                                <h4>{building.buildingName || `Building ${building.zip}`}</h4>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col xs={12}>\n                                                {this.renderStatus(building.status, building.proposalUrl)}\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col xs={12} sm={4}>\n                                                <div><b>Zip:</b> {building.zip}</div>\n                                            </Col>\n                                            <Col xs={12} sm={4}>\n                                                <div><b>Uploaded Bill URL:</b> <a href={building.billUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"green\">Click to view</a></div>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col xs={12} sm={4}>\n                                                <div><b>Shaded?:</b> {building.shaded || \"Not provided\"}</div>\n                                            </Col>\n                                            <Col xs={12} sm={4}>\n                                                <div><b>Average bill cost:</b> {building.averageBill || \"Not provided\"}</div>\n                                            </Col>\n                                            <Col xs={12} sm={4}>\n                                                <b>Submitted:</b>&nbsp;\n                                                <time>\n                                                    {timestampToDateTime(building.timestamp).fullDate} @ {timestampToDateTime(building.timestamp).fullTime}\n                                                </time>\n                                            </Col>\n                                        </Row>\n                                    </Grid>\n                                </div>\n                            )\n                        })\n                    }\n                    {/* <Link to=\"/buildings\" className=\"btn btn-sm animated-button victoria-one\">\n                        <button type=\"submit\" className=\"just-text-btn\">View open building quotes</button>\n                    </Link> */}\n                    <br/>\n                    <hr/>\n                    <h2>Personal Info</h2>\n                    <Formik\n                        initialValues={initialFormState}\n                        validationSchema={profileSchema}\n                        enableReinitialize={true}\n                        onSubmit={(values, actions) => {\n                            // Needed to pass setSubmitting because if confirm window was exited by accident and u tried to resubmit, button was still disabled\n                            this.updateDetails(values, actions.setSubmitting);\n                        }}>\n                        {props => (\n                            <Form onSubmit={props.handleSubmit}>\n                                <Grid fluid>\n                                    {/* Row 1 */}\n                                    <Row>\n                                        <Col xs={12} md={6} lg={4}>\n                                        <label htmlFor=\"firstName\">First name: <span className=\"red s-text\">*required</span></label>\n                                        <Field\n                                            name=\"firstName\"\n                                            onChange={props.handleChange}\n                                            value={props.values.firstName}\n                                            type=\"text\"\n                                            placeholder={props.values.firstName || `First name`}\n                                        />\n                                        {props.errors.firstName && props.touched.firstName ? (\n                                            <span className=\"red\">{props.errors.firstName}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                        </Col>\n                                        <Col xs={12} md={6} lg={4}>\n                                        <label htmlFor=\"lastName\">Last name: <span className=\"red s-text\">*required</span></label>\n                                        <Field\n                                            name=\"lastName\"\n                                            onChange={props.handleChange}\n                                            value={props.values.lastName}\n                                            type=\"text\"\n                                            placeholder={props.values.lastName || `Last name`}\n                                        />\n                                        {props.errors.lastName && props.touched.lastName ? (\n                                            <span className=\"red\">{props.errors.lastName}</span>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                        </Col>\n                                        <Col xs={12} md={6} lg={4}>\n                                            <label htmlFor=\"email\">\n                                                Email:&nbsp; \n                                                <span className=\"grey s-text\">*currently not changeable</span>\n                                                {/* &nbsp;&nbsp;  \n                                                <Link to=\"/account/profile/change-email\">\n                                                    <span className=\"grey s-text\">edit</span>\n                                                </Link>  */}\n                                            </label>\n                                            <Field\n                                                disabled\n                                                name=\"email\"\n                                                onChange={props.handleChange}\n                                                value={props.values.email}\n                                                type=\"email\"\n                                                placeholder={props.values.email || `john.doe@mail.com`}\n                                            />\n                                            {props.errors.email && props.touched.email ? (\n                                                <span className=\"red\">{props.errors.email}</span>\n                                            ) : (\n                                                \"\"\n                                            )}\n                                        </Col>\n                                    </Row>\n                                    {/* Row 2 */}\n                                    <Row>\n                                        <Col xs={12} sm={6}>\n                                            <label htmlFor=\"phone\">Phone: </label>\n                                            <Field\n                                                name=\"phone\"\n                                                validate={validatePhone}\n                                                onChange={props.handleChange}\n                                                value={props.values.phone}\n                                                type=\"text\"\n                                                placeholder={props.values.phone || `(123) 456-7890`}\n                                            />\n                                            {props.errors.phone && props.touched.phone ? (\n                                                <span className=\"red\">{props.errors.phone}</span>\n                                            ) : (\n                                                \"\"\n                                            )}\n                                        </Col>\n                                        <Col xs={12} sm={6}>\n                                            <label htmlFor=\"business\">Business: </label>\n                                            <Field\n                                                name=\"business\"\n                                                onChange={props.handleChange}\n                                                value={props.values.business}\n                                                type=\"text\"\n                                                placeholder={props.values.business || `Big Business Boys LLC`}\n                                            />\n                                            {props.errors.business && props.touched.business ? (\n                                                <span className=\"red\">{props.errors.business}</span>\n                                            ) : (\n                                                \"\"\n                                            )}\n                                        </Col>\n                                    </Row>\n                                   \n                                    {/* Row 9 */}\n                                    <Row>\n                                        <Col xs={12} sm={3} className=\"s-margin\">\n                                            <a className=\"btn btn-sm animated-button victoria-one big-width\" href=\"# \" onClick={(e) => props.handleSubmit(e)}>\n                                                <button type=\"submit\" className=\"just-text-btn\" disabled={!props.dirty && !props.isSubmitting}>Update changes</button>\n                                            </a>\n                                        </Col>\n                                        <Col xs={12} sm={3} className=\"s-margin\">\n                                            <a className=\"btn btn-sm animated-button thar-four\" href=\"# \" onClick={props.handleReset}>\n                                                <button type=\"button\" className=\"just-text-btn\">Reset changes</button>\n                                            </a>\n                                        </Col>\n                                        <Col xs={12} sm={3} className=\"s-margin\">\n                                            <a className=\"btn btn-sm animated-button thar-three\" href=\"# \" onClick={this.sendPasswordReset}>\n                                                <button type=\"button\" className=\"just-text-btn\">Change password</button>\n                                            </a>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"s-padding-t\">\n                                        <label>Registered: </label>&nbsp;\n                                        <time className=\"box-text-v-align\">\n                                            {this.state.user.timestamp && this.state.user.timestamp.fullDate} @ {this.state.user.timestamp && this.state.user.timestamp.fullTime}\n                                        </time>\n                                    </Row>\n                                </Grid> \n                            </Form>\n                        )}\n                    </Formik>\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default Account\n","import React, { Component } from 'react'\nimport { withRouter } from \"react-router-dom\";\n\nclass LoggingIn extends Component {\n    constructor(props) {\n        super(props)\n        this.redirectToProfile = this.redirectToProfile.bind(this);\n    }\n\n    redirectToProfile(){\n        setTimeout(() => {\n            this.props.history.push(\"/account\");\n          }, 1500);\n    }\n    \n    render() {\n        return (\n            <div className=\"wrapper\">\n                <h2>Redirecting you...</h2>\n                { this.redirectToProfile() }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(LoggingIn);","import React, { Component } from 'react'\nimport { firestore, storage } from '../../Fire';\nimport { timestampToDateTime } from '../../utils/misc';\nimport { statusSchema, userAssignedToSchema, userNotesSchema, buildingNotesSchema } from '../../utils/formSchemas'\nimport * as constant from \"../../utils/constants.js\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { Field, Form, Formik } from 'formik';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport Modal from 'react-modal';\nimport { Col, Grid, Row } from 'react-flexbox-grid';\nimport { genId } from '../../utils/misc';\nimport { Helmet } from 'react-helmet-async';\nimport { store } from 'react-notifications-component';\n\nclass AdminPanel extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: [],\n            buildings: [],\n            referrals: [],\n            messages: [],\n            admins: [],\n            showUserNotesModal: [],\n            showBuildingNotesModal: [],\n            showUploadProposalModal: [],\n            numBuildingsLoaded: 0,\n            numUsersLoaded: 0,\n            numReferralsLoaded: 0,\n            numMessagesLoaded: 0,\n            usersTotal: 0,\n            buildingsTotal: 0,\n            referralsTotal: 0,\n            messagesTotal: 0,\n            myClientsShown: false,\n            thisClientDataShown: \"\",\n            filePath: null,\n            fileUrl: \"\",\n            fileProgress: 0,\n            proposalSavedToDb: false,\n            queryDirection: \"desc\",\n            usersOrder: \"timestamp\",\n            buildingsOrder: \"timestamp\",\n            referralsOrder: \"timestamp\",\n            messagesOrder: \"timestamp\",\n        }\n\n        this.modules = {\n            toolbar: [\n                [{'header': '2'}],\n                [{size: []}],\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                [{'list': 'ordered'}, {'list': 'bullet'}, \n                {'indent': '-1'}, {'indent': '+1'}],\n                [{ align: '' }, { align: 'center' }, { align: 'right' }, { align: 'justify' }],\n                ['link', 'image'],\n                ['clean']\n            ],\n            clipboard: {\n              matchVisual: false,\n            }\n          }\n        \n        this.formats = [\n            'header', 'size',\n            'bold', 'italic', 'underline', 'strike', 'blockquote',\n            'list', 'bullet', 'indent',\n            'link', 'image', 'align'\n        ]\n    }\n    \n    componentDidMount(){\n        // Listen for Firestore changes\n        this.unsubscribeAdminUsers = firestore.collection(\"users\").where(\"isAdmin\", \"==\", true).orderBy(\"timestamp\", \"desc\")\n            .onSnapshot((querySnapshot) => {\n                var tempAdmins = []\n                querySnapshot.forEach((doc) => {\n                    var docWithMore = Object.assign({}, doc.data());\n                    docWithMore.id = doc.id;\n                    tempAdmins.push(docWithMore);\n                });\n                this.setState({\n                    admins: tempAdmins\n                })\n            });\n\n        this.unsubscribeOther = firestore.collection(\"other\").doc(\"stats\")\n            .onSnapshot((doc) => {\n                this.setState({\n                    usersTotal: doc.data().usersTotal,\n                    buildingsTotal: doc.data().buildingsTotal,\n                    referralsTotal: doc.data().referralsTotal,\n                    messagesTotal: doc.data().messagesTotal,\n                })\n            });\n        \n        this.loadMoreBuildings();\n        this.loadMoreUsers();\n        this.loadMoreReferrals();\n        this.loadMoreMessages();\n        \n    }\n\n    componentWillUnmount() {\n        if(this.unsubscribeAdminUsers){\n            this.unsubscribeAdminUsers();\n        }\n\n        if(this.unsubscribeOther){\n            this.unsubscribeOther();\n        }\n\n        if(this.unsubscribeLoadUsers){\n            this.unsubscribeLoadUsers();\n        }\n\n        if(this.unsubscribeLoadBuildings){\n            this.unsubscribeLoadBuildings();\n        }\n\n        if(this.unsubscribeLoadReferrals){\n            this.unsubscribeLoadReferrals();\n        }\n\n        if(this.unsubscribeLoadMessages){\n            this.unsubscribeLoadMessages();\n        }\n\n        if(this.unsubscribeLoadMyUsers){\n            this.unsubscribeLoadMyUsers();\n        }\n\n        if(this.unsubscribeLoadClientBuildings){\n            this.unsubscribeLoadClientBuildings();\n        }\n\n        if(this.unsubscribeLoadClientReferrals){\n            this.unsubscribeLoadClientReferrals();\n        }\n\n        if(this.unsubscribeLoadClientMessages){\n            this.unsubscribeLoadClientMessages();\n        }\n    }   \n\n    componentDidUpdate(prevProps, prevState){\n        if(this.state.myClientsShown !== prevState.myClientsShown){\n            this.loadMoreUsers();\n        }\n\n        if(this.state.thisClientDataShown !== prevState.thisClientDataShown){\n            this.loadMoreBuildings();\n            this.loadMoreReferrals();\n            this.loadMoreMessages();\n        }\n\n        if(this.state.queryDirection !== prevState.queryDirection || \n            this.state.usersOrder !== prevState.usersOrder || \n            this.state.buildingsOrder !== prevState.buildingsOrder || \n            this.state.referralsOrder !== prevState.referralsOrder || \n            this.state.messagesOrder !== prevState.messagesOrder){\n            this.loadMoreUsers();\n            this.loadMoreBuildings();\n            this.loadMoreReferrals();\n            this.loadMoreMessages();\n        }\n    }\n\n    handleOpenUserNotesModal = (index) => {\n        var tempShowUserModals = this.state.showUserNotesModal\n        tempShowUserModals[index] = true\n        this.setState({ showUserNotesModal: tempShowUserModals });\n    }\n\n    handleCloseUserNotesModal = (index) => {\n        var tempShowUserModals = this.state.showUserNotesModal\n        tempShowUserModals[index] = false\n        this.setState({ showUserNotesModal: tempShowUserModals });\n    }\n\n    handleOpenBuildingNotesModal = (index) => {\n        var tempShowBuildingModals = this.state.showBuildingNotesModal\n        tempShowBuildingModals[index] = true\n        this.setState({ showBuildingNotesModal: tempShowBuildingModals });\n    }\n\n    handleCloseBuildingNotesModal = (index) => {\n        var tempShowBuildingModals = this.state.showUserNotesModal\n        tempShowBuildingModals[index] = false\n        this.setState({ showBuildingNotesModal: tempShowBuildingModals });\n    }\n\n    handleOpenUploadProposalModal = (index) => {\n        var tempShowUploadProposalModal = this.state.showUploadProposalModal\n        tempShowUploadProposalModal[index] = true\n        this.setState({ showUploadProposalModal: tempShowUploadProposalModal });\n    }\n\n    handleCloseUploadProposalModal = (index) => {\n        var choseToLeave = false;\n        if(this.state.filePath && !this.state.fileUrl){\n            const confirmFilePath = window.confirm(\"Looks like you've selected a file, but haven't uploaded it. Are you sure you want to close?\");\n            if(confirmFilePath){\n                choseToLeave = true\n            } else {\n                console.log(\"User chose to stay.\")\n            }\n        } else if(this.state.fileUrl && !this.state.proposalSavedToDb){\n            const confirmFileUrl = window.confirm(\"Looks like you've uploaded a file, but haven't saved it to the database. Are you sure you want to close?\");\n            if(confirmFileUrl){\n                choseToLeave = true\n            } else {\n                console.log(\"User chose to stay.\")\n            }\n        } else {\n            choseToLeave = true\n        }\n\n        if(choseToLeave){\n            var tempShowUploadProposalModal = this.state.showUploadProposalModal\n            tempShowUploadProposalModal[index] = false\n            this.setState({ \n                showUploadProposalModal: tempShowUploadProposalModal,\n                proposalSavedToDb: false\n            });\n        }\n        \n    }\n\n    loadMoreUsers(){\n        var newNumToLoad = this.state.numUsersLoaded;\n        newNumToLoad = newNumToLoad+20\n    \n        this.setState({\n            numUsersLoaded: newNumToLoad\n        })\n\n        if(this.state.myClientsShown){\n            this.unsubscribeLoadMyUsers = firestore.collection(\"users\").where(\"isAdmin\", \"==\", false).where(\"assignedTo.userId\", \"==\", this.props.user.uid).orderBy(this.state.usersOrder, this.state.queryDirection).limit(newNumToLoad)\n                .onSnapshot((querySnapshot) => {\n                    var tempUsers = [];\n                    var tempShowUserModals = [];\n                    var count = 0;\n                    querySnapshot.forEach((doc) => {\n                        var docWithMore = Object.assign({}, doc.data());\n                        docWithMore.id = doc.id;\n                        tempUsers.push(docWithMore);\n                        tempShowUserModals[count] = false;\n                        count++\n                    });\n                    this.setState({\n                        users: tempUsers,\n                        showUserNotesModal: tempShowUserModals\n                    })\n                });\n\n            if(this.unsubscribeLoadUsers){\n                this.unsubscribeLoadUsers();\n            }\n        } else {\n            this.unsubscribeLoadUsers = firestore.collection(\"users\").where(\"isAdmin\", \"==\", false).orderBy(this.state.usersOrder, this.state.queryDirection).limit(newNumToLoad)\n                .onSnapshot((querySnapshot) => {\n                    var tempUsers = [];\n                    var tempShowUserModals = [];\n                    var count = 0;\n                    querySnapshot.forEach((doc) => {\n                        var docWithMore = Object.assign({}, doc.data());\n                        docWithMore.id = doc.id;\n                        tempUsers.push(docWithMore);\n                        tempShowUserModals[count] = false;\n                        count++\n                    });\n                    this.setState({\n                        users: tempUsers,\n                        showUserNotesModal: tempShowUserModals\n                    })\n                });\n\n            if(this.unsubscribeLoadMyUsers){\n                this.unsubscribeLoadMyUsers();\n            }\n        }\n    }\n\n    loadMoreBuildings(){\n        var newNumToLoad = this.state.numBuildingsLoaded;\n        newNumToLoad = newNumToLoad+20\n    \n        this.setState({\n            numBuildingsLoaded: newNumToLoad\n        })\n\n        if(this.state.thisClientDataShown){\n            this.unsubscribeLoadClientBuildings = firestore.collection(\"buildings\").where(\"clientId\", \"==\", this.state.thisClientDataShown).orderBy(this.state.buildingsOrder, this.state.queryDirection).limit(newNumToLoad)\n                .onSnapshot((querySnapshot) => {\n                    var tempBuildings = []\n                    var tempShowBuildingModals = [];\n                    var count = 0;\n                    querySnapshot.forEach((doc) => {\n                        var docWithMore = Object.assign({}, doc.data());\n                        docWithMore.id = doc.id;\n                        tempBuildings.push(docWithMore);\n                        tempShowBuildingModals[count] = false;\n                        count++\n                    });\n                    this.setState({\n                        buildings: tempBuildings,\n                        showBuildingNotesModal: tempShowBuildingModals\n                    })\n                });\n\n            if(this.unsubscribeLoadBuildings){\n                this.unsubscribeLoadBuildings();\n            }\n        \n        } else {\n            this.unsubscribeLoadBuildings = firestore.collection(\"buildings\").orderBy(this.state.buildingsOrder, this.state.queryDirection).limit(newNumToLoad)\n                .onSnapshot((querySnapshot) => {\n                    var tempBuildings = []\n                    var tempShowBuildingModals = [];\n                    var count = 0;\n                    querySnapshot.forEach((doc) => {\n                        var docWithMore = Object.assign({}, doc.data());\n                        docWithMore.id = doc.id;\n                        tempBuildings.push(docWithMore);\n                        tempShowBuildingModals[count] = false;\n                        count++\n                    });\n                    this.setState({\n                        buildings: tempBuildings,\n                        showBuildingNotesModal: tempShowBuildingModals\n                    })\n                });\n\n            if(this.unsubscribeLoadClientBuildings){\n                this.unsubscribeLoadClientBuildings();\n            }\n        }\n    }\n\n    loadMoreReferrals(){\n        var newNumToLoad = this.state.numReferralsLoaded;\n        newNumToLoad = newNumToLoad+20\n    \n        this.setState({\n            numReferralsLoaded: newNumToLoad\n        })\n\n        if(this.state.thisClientDataShown){\n            this.unsubscribeLoadClientReferrals = firestore.collection(\"referrals\").where(\"referrer.userId\", \"==\", this.state.thisClientDataShown).orderBy(this.state.referralsOrder, this.state.queryDirection).limit(newNumToLoad)\n                .onSnapshot((querySnapshot) => {\n                    var tempRefs = [];\n                    querySnapshot.forEach((doc) => {\n                        var docWithMore = Object.assign({}, doc.data());\n                        docWithMore.id = doc.id;\n                        tempRefs.push(docWithMore);\n                    });\n                    this.setState({\n                        referrals: tempRefs\n                    })\n                });\n\n            if(this.unsubscribeLoadReferrals){\n                this.unsubscribeLoadReferrals();\n            }\n        \n        } else {\n            this.unsubscribeLoadReferrals = firestore.collection(\"referrals\").orderBy(this.state.referralsOrder, this.state.queryDirection).limit(newNumToLoad)\n                .onSnapshot((querySnapshot) => {\n                    var tempRefs = [];\n                    querySnapshot.forEach((doc) => {\n                        var docWithMore = Object.assign({}, doc.data());\n                        docWithMore.id = doc.id;\n                        tempRefs.push(docWithMore);\n                    });\n                    this.setState({\n                        referrals: tempRefs\n                    })\n                });\n\n            if(this.unsubscribeLoadClientReferrals){\n                this.unsubscribeLoadClientReferrals();\n            }\n        }\n    }\n\n    loadMoreMessages(){\n        var newNumToLoad = this.state.numMessagesLoaded;\n        newNumToLoad = newNumToLoad+20\n    \n        this.setState({\n            numMessagesLoaded: newNumToLoad\n        })\n\n        if(this.state.thisClientDataShown){\n            this.unsubscribeLoadClientMessages = firestore.collection(\"messages\").where(\"userId\", \"==\", this.state.thisClientDataShown).orderBy(this.state.messagesOrder, this.state.queryDirection).limit(newNumToLoad)\n                .onSnapshot((querySnapshot) => {\n                    var tempMessages = [];\n                    querySnapshot.forEach((doc) => {\n                        var docWithMore = Object.assign({}, doc.data());\n                        docWithMore.id = doc.id;\n                        tempMessages.push(docWithMore);\n                    });\n                    this.setState({\n                        messages: tempMessages\n                    })\n                });\n\n            if(this.unsubscribeLoadMessages){\n                this.unsubscribeLoadMessages();\n            }\n        } else { \n            this.unsubscribeLoadMessages = firestore.collection(\"messages\").orderBy(this.state.messagesOrder, this.state.queryDirection).limit(newNumToLoad)\n                .onSnapshot((querySnapshot) => {\n                    var tempMessages = [];\n                    querySnapshot.forEach((doc) => {\n                        var docWithMore = Object.assign({}, doc.data());\n                        docWithMore.id = doc.id;\n                        tempMessages.push(docWithMore);\n                    });\n                    this.setState({\n                        messages: tempMessages\n                    })\n                });\n\n            if(this.unsubscribeLoadClientMessages){\n                this.unsubscribeLoadClientMessages();\n            }\n        }\n    }\n\n    updateUserAssignedTo = (values, userId) => {\n        if(values.assignedTo){\n            console.log(\"Adding \" + values.assignedTo + \" to \" + userId)\n            const foundAdminInfo = this.state.admins.find(admin => admin.id === values.assignedTo)\n            console.log(\"Found admin with name of: \" + foundAdminInfo.firstName)\n            // Update firestore\n            firestore.collection(\"users\").doc(userId).set({\n                assignedTo: {\n                    userId: values.assignedTo,\n                    firstName: foundAdminInfo.firstName,\n                    lastName: foundAdminInfo.lastName\n                }\n            }, { merge: true }).then(() => {\n                console.log(\"Successfully updated user assigned to.\")\n                store.addNotification({\n                    title: \"Success\",\n                    message: 'Successfully updated user assigned to field.',\n                    type: \"success\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n            }).catch((error) => {\n                store.addNotification({\n                    title: \"Error\",\n                    message: `Error changing user assigned to field on database: ${error}`,\n                    type: \"danger\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n                console.error(\"Error changing user assignedTo on database: \" + error);\n            });\n        } else {\n            firestore.collection(\"users\").doc(userId).set({\n                assignedTo: { userId: \"\", firstName: \"\", lastName: \"\" },\n            }, { merge: true }).then(() => {\n                console.log(\"Successfully updated user assigned to.\")\n                store.addNotification({\n                    title: \"Success\",\n                    message: 'Successfully updated user assigned to field.',\n                    type: \"success\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n            }).catch((error) => {\n                store.addNotification({\n                    title: \"Error\",\n                    message: `Error changing user assigned to field on database: ${error}`,\n                    type: \"danger\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  })\n                console.error(\"Error changing user assignedTo on database: \" + error);\n            });\n        }\n    }\n\n    updateBuildingStatus = (values, buildingId) => {\n        firestore.collection(\"buildings\").doc(buildingId).set({\n            status: values.status\n        }, { merge: true }).then(() => {\n            console.log(\"Successfully updated building status.\")\n            store.addNotification({\n                title: \"Success\",\n                message: 'Successfully updated building status.',\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n        }).catch((error) => {\n            store.addNotification({\n                title: \"Error\",\n                message: `Error changing building status on database: ${error}`,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n            console.error(\"Error changing building status on database: \" + error);\n        });\n}\n\n    updateReferralStatus = (values, referralId) => {\n        firestore.collection(\"referrals\").doc(referralId).set({\n            status: values.status\n        }, { merge: true }).then(() => {\n            store.addNotification({\n                title: \"Success\",\n                message: 'Successfully updated referral status.',\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n            console.log(\"Successfully updated referral status.\")\n        }).catch((error) => {\n            store.addNotification({\n                title: \"Error\",\n                message: `Error changing referral status on database: ${error}`,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n            console.error(\"Error changing referral status on database: \" + error);\n        });\n    }\n\n    updateMessageStatus = (values, messageId) => {\n        firestore.collection(\"messages\").doc(messageId).set({\n            status: values.status\n        }, { merge: true }).then(() => {\n            console.log(\"Successfully updated message status.\")\n            store.addNotification({\n                title: \"Success\",\n                message: 'Successfully updated message status.',\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n        }).catch((error) => {\n            store.addNotification({\n                title: \"Error\",\n                message: `Error changing message status on database: ${error}`,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n            console.error(\"Error changing message status on database: \" + error);\n        });\n    }\n\n    updateUserNotes = (values, userId) => {\n        // See: https://github.com/zenoamaro/react-quill/issues/570\n        var removedWeirdBr = values.notes.replace(/<p><br><\\/p>/g, \"\")\n        // Update firestore\n        firestore.collection(\"users\").doc(userId).set({\n            notes: removedWeirdBr\n        }, { merge: true }).then(() => {\n            console.log(\"Successfully updated user notes.\")\n            store.addNotification({\n                title: \"Success\",\n                message: 'Successfully updated user notes.',\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n        }).catch((error) => {\n            store.addNotification({\n                title: \"Error\",\n                message: `Error changing user notes on database: ${error}`,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n            console.error(\"Error changing user notes on database: \" + error);\n        });\n    }\n\n    updateBuildingNotes = (values, buildingId) => {\n        // See: https://github.com/zenoamaro/react-quill/issues/570\n        var removedWeirdBr = values.notes.replace(/<p><br><\\/p>/g, \"\")\n        // Update firestore\n        firestore.collection(\"buildings\").doc(buildingId).set({\n            notes: removedWeirdBr\n        }, { merge: true }).then(() => {\n            console.log(\"Successfully updated building notes.\")\n            store.addNotification({\n                title: \"Success\",\n                message: 'Successfully updated building notes.',\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n        }).catch((error) => {\n            store.addNotification({\n                title: \"Error\",\n                message: `Error changing building notes on database: ${error}`,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n            console.error(\"Error changing building notes on database: \" + error);\n        });\n    }\n\n    handleFileChange = e => {\n        if (e.target.files[0]) {\n          const filePath = e.target.files[0];\n          this.setState(() => ({ filePath }));\n        }\n    };\n\n    handleFileUpload = (file) => {\n        const randomId = genId(5)\n        const uploadTask = storage.ref(`proposals/${randomId}-${file.name}`).put(file);\n        uploadTask.on(\n          \"state_changed\",\n          snapshot => {\n            // progress function ...\n            const fileProgress = Math.round(\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n            );\n            this.setState({ fileProgress });\n          },\n          error => {\n            // Error function ...\n            console.log(error);\n          },\n          () => {\n            // complete function ...\n            storage\n              .ref(`proposals/${randomId}-${file.name}`)\n              .getDownloadURL()\n              .then(fileUrl => {\n                this.setState({ \n                    fileUrl\n                 });\n              });\n          }\n        );\n    };\n\n    uploadProposal = (buildingId) => {\n        firestore.collection(\"buildings\").doc(buildingId).set({\n            proposalUrl: this.state.fileUrl,\n            status: constant.READY\n        }, { merge: true }).then(() => {\n            this.setState({\n                proposalSavedToDb: true,\n                showUploadProposalModal: false\n            })\n            console.log(\"Successfully updated building proposal URL.\")\n            store.addNotification({\n                title: \"Success\",\n                message: \"Successfully updated building proposal URL.\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n        }).catch((error) => {\n            store.addNotification({\n                title: \"Error\",\n                message: `Error changing building proposal URL on database: ${error}`,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n            console.error(\"Error changing building proposal URL on database: \" + error);\n        });\n    }\n\n    toggleMyClients = (e) => {\n        e.preventDefault()\n        this.setState({\n            myClientsShown: !this.state.myClientsShown\n        });\n    }\n\n    toggleFilterByClient = (e, clientId = \"\") => {\n        e.preventDefault()\n        if(clientId){\n            store.addNotification({\n                title: \"Success\",\n                message: `Showing only client \"...${clientId.substring(clientId.length-8, clientId.length)}\" data.`,\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n            this.setState({\n                thisClientDataShown: clientId\n            });\n        } else {\n            store.addNotification({\n                title: \"Success\",\n                message: `Showing all data again.`,\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n              })\n            this.setState({\n                thisClientDataShown: \"\"\n            });\n        }\n    }\n\n    toggleQueryDirection = (e) => {\n        e.preventDefault()\n        if(this.state.queryDirection === \"desc\"){\n            this.setState({\n                queryDirection: \"asc\"\n            });\n        } else {\n            this.setState({\n                queryDirection: \"desc\"\n            });\n        }\n    }\n\n    orderUsers = (e, field) => {\n        e.preventDefault()\n        this.setState({\n            usersOrder: field\n        });\n    }\n\n    orderBuildings = (e, field) => {\n        e.preventDefault()\n        this.setState({\n            buildingsOrder: field\n        });\n    }\n\n    orderReferrals = (e, field) => {\n        e.preventDefault()\n        this.setState({\n            referralsOrder: field\n        });\n    }\n\n    orderMessages = (e, field) => {\n        e.preventDefault()\n        this.setState({\n            messagesOrder: field\n        });\n    }\n\n    render() {\n        return (\n            <>\n            <Helmet>\n                <title>Admin Panel | Prestige Power</title>\n            </Helmet>\n            <div className=\"xl-container s-padding-t-b\">\n                <h1>Admin Panel</h1>\n                <Grid fluid className=\"s-margin-b\">\n                    <Row>\n                        <Col sm={12} md={3} className=\"s-margin-b\">\n                            <a className=\"btn btn-sm animated-button victoria-one\" href=\"# \" onClick={(e) => this.toggleMyClients(e)}>\n                                <button type=\"button\" className=\"just-text-btn\">{this.state.myClientsShown ? \"Hide\" : \"Show only\"} my clients</button>\n                            </a>\n                        </Col>\n                        <Col sm={12} md={3} className=\"s-margin-b\">\n                            <a className=\"btn btn-sm animated-button victoria-one\" href=\"# \" onClick={(e) => this.toggleQueryDirection(e)}>\n                                <button type=\"button\" className=\"just-text-btn\">\n                                    Change direction to&nbsp;\n                                    <span className=\"blue\">\n                                        {this.state.queryDirection === \"desc\" ? \"descending\" : \"ascending\"} \n                                        &nbsp;order&nbsp;\n                                        {this.state.queryDirection === \"desc\" ? <i className=\"fas fa-chevron-down\"/> : <i className=\"fas fa-chevron-up\"/>}\n                                    </span>\n                                </button>\n                            </a>\n                        </Col>\n                        {this.state.thisClientDataShown && (\n                            <Col sm={12} md={3} className=\"s-margin-b\">\n                                <a className=\"btn btn-sm animated-button thar-four\" href=\"# \" onClick={(e) => this.toggleFilterByClient(e)}>\n                                    <button type=\"button\" className=\"just-text-btn\">Show all data again</button>\n                                </a>\n                            </Col>\n                        )} \n                    </Row>\n                </Grid>\n                <Tabs>\n                    <TabList>\n                        <Tab><b className=\"l-text\">Clients</b></Tab>\n                        <Tab><b className=\"l-text\">Buildings</b></Tab>\n                        <Tab><b className=\"l-text\">Referrals</b></Tab>\n                        <Tab><b className=\"l-text\">Messages</b></Tab>\n                    </TabList>\n\n                    <TabPanel>\n                        <div className=\"overflow-div s-margin-r-l\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Last 8 Client ID</th>\n                                        <th><span className={this.state.usersOrder === \"firstName\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderUsers(e, \"firstName\")}>First Name</span></th>\n                                        <th><span className={this.state.usersOrder === \"lastName\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderUsers(e, \"lastName\")}>Last Name</span></th>\n                                        <th>Email</th>\n                                        <th>Phone</th>\n                                        <th><span className={this.state.usersOrder === \"acquisition\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderUsers(e, \"acquisition\")}>Acquisition</span></th>\n                                        <th>Solar Reasons</th>\n                                        <th><span className={this.state.usersOrder === \"timestamp\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderUsers(e, \"timestamp\")}>Timestamp</span></th>\n                                        <th>Assigned To</th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    { \n                                        this.state.users.map((user, index) => {\n                                            const dateAndTime = timestampToDateTime(user.timestamp)\n                                            const initialUserAssignedToState = {\n                                                assignedTo: user.assignedTo.userId\n                                            }\n                                            const initialUserNotesState = {\n                                                notes: user.notes\n                                            }\n                                            return (\n                                                <tr key={index} className={this.state.thisClientDataShown === user.id ? \"background-xlight-blue\" : \"\"}>\n                                                    <td>...{user.id.substring(user.id.length-8, user.id.length)}</td>\n                                                    <td>{user.firstName}</td>\n                                                    <td>{user.lastName}</td>\n                                                    <td>{user.email}</td>\n                                                    <td>{user.phone}</td>\n                                                    <td>{user.acquisition}</td>\n                                                    <td>{user.solarReasons.join(\", \")}</td>\n                                                    <td>{dateAndTime.fullDate} @ {dateAndTime.fullTime}</td>\n                                                    <td>\n                                                        <Formik\n                                                            initialValues={initialUserAssignedToState}\n                                                            validationSchema={userAssignedToSchema}\n                                                            enableReinitialize={true}\n                                                            onSubmit={(values, actions) => {\n                                                                this.updateUserAssignedTo(values, user.id);\n                                                            }}\n                                                        >\n                                                            {props => (\n                                                                <Form onSubmit={props.handleSubmit}>\n                                                                    <Field\n                                                                        component=\"select\" \n                                                                        name=\"assignedTo\" \n                                                                        className=\"table-select\"\n                                                                        value={props.values.assignedTo}\n                                                                        onChange={props.handleChange}\n                                                                        >\n                                                                        <option defaultValue value=\"\">N/A</option> \n                                                                        { this.state.admins.map((admin, index) => {return(<option key={index} value={admin.id}>{admin.firstName} {admin.lastName}</option>)}) }\n                                                                    </Field>\n                                                                    &nbsp;&nbsp;\n                                                                    <button\n                                                                        type=\"submit\"\n                                                                        className=\"just-text-btn green text-hover\"\n                                                                        disabled={!props.dirty || props.isSubmitting}\n                                                                    >\n                                                                        save\n                                                                    </button>\n                                                                </Form>\n                                                            )}\n                                                        </Formik>\n                                                    </td>\n                                                    <td>\n                                                        <span className=\"green text-hover-yellow\" onClick={() => this.handleOpenUserNotesModal(index)}>notes</span> \n                                                        &nbsp;&nbsp;||&nbsp;&nbsp;\n                                                        <span className=\"green text-hover-yellow\" onClick={(e) => this.toggleFilterByClient(e, user.id)}>{this.state.thisClientDataShown === user.id ? \"un-\" : \"\"}filter by me</span> \n                                                        <Modal\n                                                            isOpen={this.state.showUserNotesModal[index]}\n                                                            className=\"l-container background-blue p-top-center overflow-scroll eighty-height\"\n                                                            contentLabel=\"Update User Notes\"\n                                                            onRequestClose={() => this.handleCloseUserNotesModal(index)}\n                                                        >\n                                                            <div className=\"white\">\n                                                                <h4 className=\"center-text\">\n                                                                    Update User Notes\n                                                                    <i\n                                                                        onClick={() => this.handleCloseUserNotesModal(index)}\n                                                                        className=\"fas fa-times right text-hover-red\"\n                                                                    />\n                                                                </h4>\n                                                                \n                                                            </div>\n                                                            <div className=\"l-container background-white\">\n                                                                <Formik\n                                                                    initialValues={initialUserNotesState}\n                                                                    validationSchema={userNotesSchema}\n                                                                    enableReinitialize={true}\n                                                                    onSubmit={(values, actions) => {\n                                                                        this.updateUserNotes(values, user.id);\n                                                                    }}\n                                                                >\n                                                                    {props => (\n                                                                        <Form onSubmit={props.handleSubmit}>\n                                                                            <Field name=\"notes\">\n                                                                                {({ field }) => \n                                                                                    <ReactQuill \n                                                                                        value={field.value || ''} \n                                                                                        modules={this.modules}\n                                                                                        formats={this.formats}\n                                                                                        placeholder=\"This can be a simple or complex body of text with links to webpages, bolded text, headers, and more!\"\n                                                                                        onChange={field.onChange(field.name)} />\n                                                                                }\n                                                                            </Field>\n                                                                            <br/>\n                                                                            <div className=\"center-text\">\n                                                                                <button\n                                                                                    type=\"submit\"\n                                                                                    disabled={!props.dirty || props.isSubmitting}\n                                                                                >\n                                                                                    Save\n                                                                                </button>\n                                                                            </div>\n                                                                        </Form>\n                                                                    )}\n                                                                </Formik>\n                                                            </div>\n                                                        </Modal>\n                                                    </td>\n                                                </tr>\n                                            )\n                                        }) \n                                    } \n                                </tbody>\n                            </table>\n                            <div className=\"center-text l-text s-padding-t-b\">\n                                System total: {this.state.usersTotal}  \n                                {((this.state.users.length+1)%20 !== 0) && !(this.state.users.length < this.state.numUsersLoaded) && (\n                                    <>&nbsp;&nbsp;||&nbsp;&nbsp;<span className=\"l-text blue text-hover-green underline-hover cursor-pointer\" onClick={()=>this.loadMoreUsers()}>load more...</span> </>\n                                )}\n                            </div>\n                        </div>\n                    </TabPanel>\n                    <TabPanel>\n                        <div className=\"overflow-div s-margin-r-l\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Last 8 Building ID</th>\n                                        <th>Last 8 Client ID</th>\n                                        <th><span className={this.state.buildingsOrder === \"buildingName\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderBuildings(e, \"buildingName\")}>Name</span></th>\n                                        <th><span className={this.state.buildingsOrder === \"status\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderBuildings(e, \"status\")}>Status</span></th>\n                                        <th><span className={this.state.buildingsOrder === \"zip\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderBuildings(e, \"zip\")}>ZIP</span></th>\n                                        <th>Bill URL</th>\n                                        <th>Proposal URL</th>\n                                        <th>Proposal Preference</th>\n                                        <th><span className={this.state.buildingsOrder === \"isCommercial\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderBuildings(e, \"isCommercial\")}>Commercial</span></th>\n                                        <th><span className={this.state.buildingsOrder === \"shaded\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderBuildings(e, \"shaded\")}>Shaded</span></th>\n                                        <th>Average Bill</th>\n                                        <th><span className={this.state.buildingsOrder === \"timestamp\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderBuildings(e, \"timestamp\")}>Timestamp</span></th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    { \n                                        this.state.buildings.map((building, index) => {\n                                            const dateAndTime = timestampToDateTime(building.timestamp)\n                                            const initialBuildingStatusState = {\n                                                status: building.status\n                                            }\n                                            const initialBuildingNotesState = {\n                                                notes: building.notes\n                                            }\n                                            return (\n                                                <tr key={index}>\n                                                    <td>...{building.id.substring(building.id.length-8, building.id.length)}</td>\n                                                    <td>...{building.clientId.substring(building.clientId.length-8, building.clientId.length)}</td>\n                                                    <td>{building.buildingName}</td>\n                                                    <td>\n                                                    <Formik\n                                                        initialValues={initialBuildingStatusState}\n                                                        validationSchema={statusSchema}\n                                                        enableReinitialize={true}\n                                                        onSubmit={(values, actions) => {\n                                                            this.updateBuildingStatus(values, building.id);\n                                                        }}\n                                                    >\n                                                        {props => (\n                                                            <Form onSubmit={props.handleSubmit}>\n                                                                <Field\n                                                                    component=\"select\" \n                                                                    name=\"status\" \n                                                                    className=\"table-select\"\n                                                                    value={props.values.status}\n                                                                    onChange={props.handleChange}\n                                                                    >\n                                                                    <option defaultValue value=\"\">N/A</option> \n                                                                    <option value={constant.PENDING}>Pending</option>\n                                                                    <option value={constant.READY}>Ready</option>\n                                                                    <option value={constant.DONE}>Done</option>\n                                                                    <option value={constant.EXPIRED}>Expired</option>\n                                                                </Field>\n                                                                &nbsp;&nbsp;\n                                                                <button\n                                                                    type=\"submit\"\n                                                                    className=\"just-text-btn green text-hover\"\n                                                                    disabled={!props.dirty || props.isSubmitting}\n                                                                >\n                                                                    save\n                                                                </button>\n                                                            </Form>\n                                                        )}\n                                                    </Formik>\n                                                    </td>\n                                                    <td>{building.zip}</td>\n                                                    <td>{building.billUrl ? <a href={building.billUrl} target=\"_blank\" rel=\"noopener noreferrer\">View Bill</a> : \"N/A\"}</td>\n                                                    <td>{building.proposalUrl ? <a href={building.proposalUrl} target=\"_blank\" rel=\"noopener noreferrer\">View Proposal</a> : \"N/A\"}</td>\n                                                    <td>{building.proposalPref}</td>\n                                                    <td>{building.isCommercial}</td>\n                                                    <td>{building.shaded}</td>\n                                                    <td>{building.averageBill}</td>\n                                                    <td>{dateAndTime.fullDate} @ {dateAndTime.fullTime}</td>\n                                                    <td>\n                                                        <span className=\"green text-hover-yellow\" onClick={() => this.handleOpenBuildingNotesModal(index)}>notes</span> \n                                                        {building.status === constant.PENDING && (\n                                                            <>\n                                                            &nbsp;&nbsp;||&nbsp;&nbsp;\n                                                            <span className=\"green text-hover-yellow\" onClick={() => this.handleOpenUploadProposalModal(index)}>upload proposal</span> \n                                                            </>\n                                                        )}\n                                                        \n                                                        {/* Building notes */}\n                                                        <Modal\n                                                            isOpen={this.state.showBuildingNotesModal[index]}\n                                                            className=\"l-container background-blue p-top-center\"\n                                                            contentLabel=\"Update Building Notes\"\n                                                            onRequestClose={() => this.handleCloseBuildingNotesModal(index)}\n                                                        >\n                                                            <div className=\"white\">\n                                                                <h4 className=\"center-text\">\n                                                                    Update Building Notes\n                                                                    <i\n                                                                        onClick={() => this.handleCloseBuildingNotesModal(index)}\n                                                                        className=\"fas fa-times right text-hover-red\"\n                                                                    />\n                                                                </h4>\n                                                                \n                                                            </div>\n                                                            <div className=\"l-container background-white\">\n                                                                <Formik\n                                                                    initialValues={initialBuildingNotesState}\n                                                                    validationSchema={buildingNotesSchema}\n                                                                    enableReinitialize={true}\n                                                                    onSubmit={(values, actions) => {\n                                                                        this.updateBuildingNotes(values, building.id);\n                                                                    }}\n                                                                >\n                                                                    {props => (\n                                                                        <Form onSubmit={props.handleSubmit}>\n                                                                            <Field name=\"notes\">\n                                                                                {({ field }) => \n                                                                                    <ReactQuill \n                                                                                        value={field.value || ''} \n                                                                                        modules={this.modules}\n                                                                                        formats={this.formats}\n                                                                                        placeholder=\"This can be a simple or complex body of text with links to webpages, bolded text, headers, and more!\"\n                                                                                        onChange={field.onChange(field.name)} />\n                                                                                }\n                                                                            </Field>\n                                                                            <br/>\n                                                                            <div className=\"center-text\">\n                                                                                <button\n                                                                                    type=\"submit\"\n                                                                                    disabled={!props.dirty || props.isSubmitting}\n                                                                                >\n                                                                                    Save\n                                                                                </button>\n                                                                            </div>\n                                                                        </Form>\n                                                                    )}\n                                                                </Formik>\n                                                            </div>\n                                                        </Modal>\n                                                        {/* Upload Proposal */}\n                                                        <Modal\n                                                            isOpen={this.state.showUploadProposalModal[index]}\n                                                            className=\"l-container background-blue p-top-center\"\n                                                            contentLabel=\"Upload Client Proposal\"\n                                                            onRequestClose={() => this.handleCloseUploadProposalModal(index)}\n                                                        >\n                                                            <div className=\"white\">\n                                                                <h4 className=\"center-text\">\n                                                                    Update Client Proposal\n                                                                    <i\n                                                                        onClick={() => this.handleCloseUploadProposalModal(index)}\n                                                                        className=\"fas fa-times right text-hover-red\"\n                                                                    />\n                                                                </h4>\n                                                                \n                                                            </div>\n                                                            <div className=\"l-container background-white\">\n                                                                <label className=\"no-margin\">Upload the proposal:</label>\n                                                                {!this.state.fileUrl && (\n                                                                    <input type=\"file\" onChange={this.handleFileChange} />\n                                                                )}\n                                                                <br/>\n                                                                {this.state.fileProgress > 0 && ( \n                                                                    <div className=\"box-text-v-align\">\n                                                                        <progress value={this.state.fileProgress} max=\"100\"/> <b className=\"s-padding-l\">{this.state.fileProgress}%</b>\n                                                                    </div>\n                                                                )}\n                                                                {this.state.filePath && !this.state.fileUrl && (\n                                                                    <button type=\"button\" onClick={() => this.handleFileUpload(this.state.filePath)}>\n                                                                        Upload the file\n                                                                    </button>\n                                                                )}\n                                                                {this.state.fileUrl && (\n                                                                    <div>\n                                                                        <b className=\"green\">Uploaded successfully (<a rel=\"noopener noreferrer\" href={this.state.fileUrl} target=\"_blank\">click to view</a>), now save the URL to the database.</b>\n                                                                    </div>\n                                                                )}\n                                                                <div className=\"center-text\">\n                                                                    <button\n                                                                        type=\"button\"\n                                                                        onClick={() => this.uploadProposal(building.id)}\n                                                                    >\n                                                                        Save to database\n                                                                    </button>\n                                                                </div>\n                                                            </div>\n                                                        </Modal>\n                                                    </td>\n                                                </tr>\n                                            )\n                                        }) \n                                    } \n                                </tbody>\n                            </table>\n                            <div className=\"center-text l-text s-padding-t-b\">\n                                System total: {this.state.buildingsTotal}\n                                {this.state.thisClientDataShown && (\n                                    <>&nbsp;&nbsp;||&nbsp;&nbsp;Client's total: {this.state.buildings.length}</>\n                                )}  \n                                {((this.state.buildings.length+1)%20 !== 0) && !(this.state.buildings.length < this.state.numBuildingsLoaded) && (\n                                    <>&nbsp;&nbsp;||&nbsp;&nbsp;<span className=\"l-text blue text-hover-green underline-hover cursor-pointer\" onClick={()=>this.loadMoreBuildings()}>load more...</span> </>\n                                )}\n                            </div>\n                        </div>\n                    </TabPanel>\n                    <TabPanel>\n                        <div className=\"overflow-div s-margin-r-l\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Last 8 Referral ID</th>\n                                        <th><span className={this.state.referralsOrder === \"referee.firstName\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderReferrals(e, \"referee.firstName\")}>Referee First Name</span></th>\n                                        <th><span className={this.state.referralsOrder === \"referee.lastName\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderReferrals(e, \"referee.lastName\")}>Referee Last Name</span></th>\n                                        <th>Referee Email</th>\n                                        <th>Referee Phone</th>\n                                        <th>Last 8 Referrer ID</th>\n                                        <th><span className={this.state.referralsOrder === \"referrer.firstName\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderReferrals(e, \"referrer.firstName\")}>Referrer First Name</span></th>\n                                        <th><span className={this.state.referralsOrder === \"referrer.lastName\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderReferrals(e, \"referrer.lastName\")}>Referrer Last Name</span></th>\n                                        <th>Referrer Email</th>\n                                        <th>Referrer Phone</th>\n                                        <th>Relation</th>\n                                        <th><span className={this.state.referralsOrder === \"salesRep\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderReferrals(e, \"salesRep\")}>Sales Rep</span></th>\n                                        <th><span className={this.state.referralsOrder === \"status\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderReferrals(e, \"status\")}>Status</span></th>\n                                        <th><span className={this.state.referralsOrder === \"timestamp\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderReferrals(e, \"timestamp\")}>Timestamp</span></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    { \n                                        this.state.referrals.map((ref, index) => {\n                                            const dateAndTime = timestampToDateTime(ref.timestamp)\n                                            const initialReferralStatusState = {\n                                                status: ref.status\n                                            }\n                                            return (\n                                                <tr key={index}>\n                                                    <td>...{ref.id.substring(ref.id.length-8, ref.id.length)}</td>\n                                                    <td>{ref.referee.firstName}</td>\n                                                    <td>{ref.referee.lastName}</td>\n                                                    <td>{ref.referee.email}</td>\n                                                    <td>{ref.referee.phone}</td>\n                                                    <td>{ref.referrer.userId ? `...${ref.referrer.userId.substring(ref.referrer.userId.length-8, ref.referrer.userId.length)}` : \"N/A\"}</td>\n                                                    <td>{ref.referrer.firstName}</td>\n                                                    <td>{ref.referrer.lastName}</td>\n                                                    <td>{ref.referrer.email}</td>\n                                                    <td>{ref.referrer.phone}</td>\n                                                    <td>{ref.relation}</td>\n                                                    <td>{ref.salesRep}</td>\n                                                    <td>\n                                                        <Formik\n                                                            initialValues={initialReferralStatusState}\n                                                            validationSchema={statusSchema}\n                                                            enableReinitialize={true}\n                                                            onSubmit={(values, actions) => {\n                                                                this.updateReferralStatus(values, ref.id);\n                                                            }}\n                                                        >\n                                                            {props => (\n                                                                <Form onSubmit={props.handleSubmit}>\n                                                                    <Field\n                                                                        component=\"select\" \n                                                                        name=\"status\" \n                                                                        className=\"table-select\"\n                                                                        value={props.values.status}\n                                                                        onChange={props.handleChange}\n                                                                        >\n                                                                        <option defaultValue value=\"\">N/A</option> \n                                                                        <option value={constant.PENDING}>Pending</option>\n                                                                        <option value={constant.DONE}>Done</option>\n                                                                    </Field>\n                                                                    &nbsp;&nbsp;\n                                                                    <button\n                                                                        type=\"submit\"\n                                                                        className=\"just-text-btn green text-hover\"\n                                                                        disabled={!props.dirty || props.isSubmitting}\n                                                                    >\n                                                                        save\n                                                                    </button>\n                                                                </Form>\n                                                            )}\n                                                        </Formik>\n                                                    </td>\n                                                    <td>{dateAndTime.fullDate} @ {dateAndTime.fullTime}</td>\n                                                </tr>\n                                            )\n                                        }) \n                                    } \n                                </tbody>\n                            </table>\n                            <div className=\"center-text l-text s-padding-t-b\">\n                                System total: {this.state.referralsTotal}  \n                                {this.state.thisClientDataShown && (\n                                    <>&nbsp;&nbsp;||&nbsp;&nbsp;Client's total: {this.state.referrals.length}</>\n                                )}  \n                                {((this.state.referrals.length+1)%20 !== 0) && !(this.state.referrals.length < this.state.numReferralsLoaded) && (\n                                    <>&nbsp;&nbsp;||&nbsp;&nbsp;<span className=\"l-text blue text-hover-green underline-hover cursor-pointer\" onClick={()=>this.loadMoreReferrals()}>load more...</span> </>\n                                )}\n                            </div>\n                        </div>\n                    </TabPanel>\n                    <TabPanel>\n                        <div className=\"overflow-div s-margin-r-l\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Last 8 Message ID</th>\n                                        <th>Last 8 User ID</th>\n                                        <th><span className={this.state.messagesOrder === \"name\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderMessages(e, \"name\")}>Sender Name</span></th>\n                                        <th>Sender Email</th>\n                                        <th>Body</th>\n                                        <th><span className={this.state.messagesOrder === \"status\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderMessages(e, \"status\")}>Status</span></th>\n                                        <th><span className={this.state.messagesOrder === \"timestamp\" ? \"green text-hover-yellow\" : \"text-hover-yellow\"} onClick={(e) => this.orderMessages(e, \"timestamp\")}>Timestamp</span></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    { \n                                        this.state.messages.map((message, index) => {\n                                            const dateAndTime = timestampToDateTime(message.timestamp)\n                                            const initialMessageStatusState = {\n                                                status: message.status\n                                            }\n                                            return (\n                                                <tr key={index}>\n                                                    <td>...{message.id.substring(message.id.length-8, message.id.length)}</td>\n                                                    <td>{message.userId ? `...${message.userId.substring(message.userId.length-8, message.userId.length)}` : \"N/A\"} </td>\n                                                    <td>{message.name}</td>\n                                                    <td>{message.email}</td>\n                                                    <td>{message.message}</td>\n                                                    <td>\n                                                        <Formik\n                                                            initialValues={initialMessageStatusState}\n                                                            validationSchema={statusSchema}\n                                                            enableReinitialize={true}\n                                                            onSubmit={(values, actions) => {\n                                                                this.updateMessageStatus(values, message.id);\n                                                            }}\n                                                        >\n                                                            {props => (\n                                                                <Form onSubmit={props.handleSubmit}>\n                                                                    <Field\n                                                                        component=\"select\" \n                                                                        name=\"status\" \n                                                                        className=\"table-select\"\n                                                                        value={props.values.status}\n                                                                        onChange={props.handleChange}\n                                                                        >\n                                                                        <option defaultValue value=\"\">N/A</option> \n                                                                        <option value={constant.PENDING}>Pending</option>\n                                                                        <option value={constant.DONE}>Done</option>\n                                                                    </Field>\n                                                                    &nbsp;&nbsp;\n                                                                    <button\n                                                                        type=\"submit\"\n                                                                        className=\"just-text-btn green text-hover\"\n                                                                        disabled={!props.dirty || props.isSubmitting}\n                                                                    >\n                                                                        save\n                                                                    </button>\n                                                                </Form>\n                                                            )}\n                                                        </Formik>\n                                                    </td>\n                                                    <td>{dateAndTime.fullDate} @ {dateAndTime.fullTime}</td>\n                                                </tr>\n                                            )\n                                        }) \n                                    } \n                                </tbody>\n                            </table>\n                            <div className=\"center-text l-text s-padding-t-b\">\n                                System total: {this.state.messagesTotal}  \n                                {this.state.thisClientDataShown && (\n                                    <>&nbsp;&nbsp;||&nbsp;&nbsp;Client's total: {this.state.messages.length}</>\n                                )}  \n                                {((this.state.messages.length+1)%20 !== 0) && !(this.state.messages.length < this.state.numMessagesLoaded) && (\n                                    <>&nbsp;&nbsp;||&nbsp;&nbsp;<span className=\"blue text-hover-green underline-hover cursor-pointer\" onClick={()=>this.loadMoreMessages()}>load more...</span> </>\n                                )}\n                            </div>\n                        </div>\n                    </TabPanel>\n                </Tabs>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default AdminPanel","import React, { Component } from 'react'\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\n\nimport withTracker from './components/misc/WithTracker';\nimport { Page404 } from \"./components/misc/Page404\";\nimport ErrorBoundary from './components/misc/ErrorBoundary';\n\n// Pages\nimport Home from './components/pages/Home'\nimport About from './components/pages/About';\nimport WhySolar from './components/pages/WhySolar';\nimport BonusReferrals from './components/pages/BonusReferrals';\nimport CommercialSolar from './components/pages/CommercialSolar';\nimport SolarQuote from './components/pages/SolarQuote';\nimport Login from './components/pages/Login';\nimport FAQ from './components/pages/FAQ';\nimport Account from './components/pages/Account';\nimport LoggingIn from './components/pages/LoggingIn';\nimport AdminPanel from './components/pages/AdminPanel';\n\n\nclass Routes extends Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path=\"/\" component={withTracker(() => <Home user={this.props.user} />) } />\n                <Route exact path=\"/about\" component={withTracker(About)} />\n                <Route exact path=\"/why-solar\" component={withTracker(WhySolar)} />\n                <Route exact path=\"/faq\" component={withTracker(FAQ)} />\n                <Route exact path=\"/bonus-referrals\" component={withTracker(() => <BonusReferrals user={this.props.user} />) } />\n                <Route exact path=\"/commercial-solar\" component={withTracker(() => <CommercialSolar user={this.props.user} />) } />\n                <Route exact path=\"/solar-quote\" component={withTracker(() => <SolarQuote user={this.props.user} />) } />\n\n                <VisitorRoute loggedIn={this.props.user} path=\"/login\" component={withTracker(Login)} />\n                <Route path=\"/logging-in\" exact component={() => <LoggingIn user={this.props.user} />} />\n                <UserRoute\n                    exact\n                    path=\"/admin-panel\"\n                    loggedIn={this.props.user}\n                    component={() => <AdminPanel user={this.props.user} />} />\n                <UserRoute\n                    exact\n                    path=\"/account\"\n                    loggedIn={this.props.user}\n                    component={() => <Account user={this.props.user} />} />\n                <Route component={withTracker(Page404)} />\n            </Switch>\n        )\n    }\n}\n\n// Must be signed in to view\nconst UserRoute = ({ component: Comp, loggedIn, path, ...rest }) => {\n    return (\n      <Route\n        path={path}\n        {...rest}\n        render={props => {\n          return loggedIn ? (\n            <ErrorBoundary><Comp {...props} /></ErrorBoundary>\n          ) : (\n            \n            <Route\n              render={() => (\n                <>\n                  {alert(\"You must sign in to visit that page.\")}\n                  <Redirect to=\"/login\" />\n                </>\n              )}\n            />\n          );\n        }}\n      />\n    );\n  };\n  \n    // Must be signed out to view\n    const VisitorRoute = ({ component: Comp, loggedIn, path }) => {\n      return (\n        <Route\n          path={path}\n          render={props => {\n            return loggedIn ? (\n              <Route\n                render={() => (\n                  <>\n                    {alert(\"You must be signed out to visit that page.\")}\n                    <Redirect to=\"/\" />\n                  </>\n                )}\n              />\n            ) : (\n              <ErrorBoundary><Comp {...props} /></ErrorBoundary>\n            );\n          }}\n        />\n      );\n    };\n\nexport default withRouter(Routes);","import React, { Component } from 'react'\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport '../../assets/css/Hamburger.css';\nimport \"../../assets/css/Header.css\";\nimport { fire } from \"../../Fire.js\";\nimport { store } from 'react-notifications-component';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.hamburgerRef = React.createRef();\n        this.signOut = this.signOut.bind(this);\n        this.navLinksRef = React.createRef();\n    }\n\n    componentDidMount(){\n        if(this.hamburgerRef && this.navLinksRef){\n            this.hamburgerRef.current.addEventListener('click', () => {\n                this.hamburgerRef.current.classList.toggle(\"active\");\n                this.navLinksRef.current.classList.toggle(\"responsive\")\n              });\n\n        }\n    }\n\n    componentWillUnmount(){\n        this.hamburgerRef.current.removeEventListener(\"click\");\n    }\n\n    signOut(){\n        console.log(\"Signing out...\")\n        fire.auth().signOut().then(() => {\n          console.log(\"Sign out successful.\");\n          store.addNotification({\n            title: \"Success\",\n            message: \"Sign out successful.\",\n            type: \"success\",\n            insert: \"top\",\n            container: \"top-center\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 5000,\n              onScreen: true\n            }\n          })\n          this.props.history.push(\"/\");\n          window.location.reload();\n        }).catch((error) => {\n          console.error(\"Error signing out: \" + error);\n          store.addNotification({\n            title: \"Error\",\n            message: `Error signing out: ${error}`,\n            type: \"danger\",\n            insert: \"top\",\n            container: \"top-center\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 5000,\n              onScreen: true\n            }\n          })\n        });\n      }\n\n    render() {\n        return (\n            <header>\n                <nav className=\"nav-container\">\n                    <NavLink to=\"/\">\n                        <img\n                            className=\"nav-logo\"\n                            alt=\"logo\"\n                            src={require(\"../../assets/images/logos/logo.png\")}\n                        />\n                        <span className=\"nav-l-text\">Prestige Power</span>\n                    </NavLink>\n                    <a className=\"hamburger\" href=\"# \">\n                        <svg className=\"ham hamRotate ham4\" viewBox=\"0 0 100 100\" ref={this.hamburgerRef}>\n                            <path\n                                className=\"line top\"\n                                d=\"m 70,33 h -40 c 0,0 -8.5,-0.149796 -8.5,8.5 0,8.649796 8.5,8.5 8.5,8.5 h 20 v -20\" />\n                            <path\n                                className=\"line middle\"\n                                d=\"m 70,50 h -40\" />\n                            <path\n                                className=\"line bottom\"\n                                d=\"m 30,67 h 40 c 0,0 8.5,0.149796 8.5,-8.5 0,-8.649796 -8.5,-8.5 -8.5,-8.5 h -20 v 20\" />\n                        </svg>\n                    </a>\n                    <div className=\"nav-links\" ref={this.navLinksRef}>\n                        <NavLink \n                            exact\n                            to=\"/why-solar\" \n                            className=\"nav-link\" \n                            activeClassName=\"nav-select\">\n                            Why Solar?\n                        </NavLink>\n                        <NavLink \n                            exact\n                            to=\"/about\" \n                            className=\"nav-link\" \n                            activeClassName=\"nav-select\">\n                            About Us\n                        </NavLink>\n                        <NavLink \n                            exact\n                            to=\"/bonus-referrals\" \n                            className=\"nav-link\" \n                            activeClassName=\"nav-select\">\n                            Bonus Referrals\n                        </NavLink>\n                        <NavLink \n                            exact\n                            to=\"/faq\" \n                            className=\"nav-link\" \n                            activeClassName=\"nav-select\">\n                            F.A.Q\n                        </NavLink>\n                        <NavLink to=\"/solar-quote\" className=\"btn btn-sm animated-button doug-one\">Free Solar Quote</NavLink>\n                        {this.props.user && (\n                            <>\n                            <NavLink to=\"/account\" exact className=\"nav-link\" activeClassName=\"nav-select\">Account</NavLink>\n                            <NavLink to=\"/\" className=\"nav-link\" onClick={this.signOut}>Sign out</NavLink>\n                            </>\n                        )}\n                        {!this.props.user && (\n                            <>\n                            <NavLink to=\"/login\" exact className=\"nav-link\" activeClassName=\"nav-select\">Login</NavLink>\n                            </>\n                        )}\n                        \n                    </div>\n                </nav>\n                <hr className=\"s-margin-t no-padding\"/>\n            </header>\n        )\n    }\n}\n\n\nexport default withRouter(Header)","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MediaQuery from \"react-responsive\";\n\nexport default class Footer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { \n          year: new Date().getFullYear(),\n        };\n    }\n\n    render() {\n        return (\n            <footer>\n                <div className=\"f-container\">\n                    <MediaQuery minWidth={901}>\n                        <div className=\"left\">\n                            &nbsp;&nbsp;<Link to=\"/faq\">F.A.Q</Link> | <Link to=\"/commercial-solar\">Commercial Solar</Link>{!this.props.user && (<>&nbsp;| <Link to=\"/login\">Login</Link></>)}&nbsp;&nbsp;\n                        </div>\n\n                        <div className=\"center\">\n                            <div className=\"center-text\">\n                                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/GoPrestigePower\" className=\"icon-button twitter\">\n                                    <i className=\"fab fa-twitter icon-twitter\" />\n                                    <span></span>\n                                </a>\n                                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/GoPrestigePowerUSA\" className=\"icon-button facebook\">\n                                    <i className=\"fab fa-facebook icon-facebook\"/>\n                                    <span></span>\n                                </a>\n                                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.yelp.com/biz/go-prestige-power-mission-viejo\" className=\"icon-button yelp\">\n                                    <i className=\"fab fa-yelp icon-yelp\"/>\n                                    <span></span>\n                                </a>\n                            </div>\n                            &copy;\n                            {' '}\n                            {this.state.year}\n                            {' '}\n                            Prestige Power\n                        </div>\n\n                        <div className=\"right\">\n                            <a href=\"https://www.douglasrcjames.com\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fas fa-tools\"/> by douglasrcjames</a> \n                            &nbsp;&nbsp;\n                        </div>\n                    </MediaQuery>\n                    <MediaQuery maxWidth={900}>\n                        <div>\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/GoPrestigePower\" className=\"icon-button twitter\">\n                                <i className=\"fab fa-twitter icon-twitter\" />\n                                <span></span>\n                            </a>\n                            &nbsp;&nbsp;\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/GoPrestigePowerUSA\" className=\"icon-button facebook\">\n                                <i className=\"fab fa-facebook icon-facebook\"/>\n                                <span></span>\n                            </a>\n                            &nbsp;&nbsp;\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.yelp.com/biz/go-prestige-power-mission-viejo\" className=\"icon-button yelp\">\n                                <i className=\"fab fa-yelp icon-yelp\"/>\n                                <span></span>\n                            </a>\n                        </div>\n                        <div>\n                            &copy;\n                            {' '}\n                            {this.state.year}\n                            {' '}\n                            Prestige Power\n                        </div>\n                        <div>\n                        <a href=\"https://www.douglasrcjames.com\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fas fa-tools\"/> by douglasrcjames</a> \n                        </div>\n                        <div>\n                            &nbsp;&nbsp;<Link to=\"/faq\">F.A.Q</Link> | <Link to=\"/commercial-solar\">Commercial Solar</Link>{!this.props.user && (<>&nbsp;| <Link to=\"/login\">Login</Link></>)}&nbsp;&nbsp;\n                        </div>\n                    </MediaQuery>\n                </div>\n                \n\n\n            </footer>\n        )\n    }\n}\n\n","import { Component } from 'react'\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends Component {\n    componentDidUpdate(prevProps) {\n      if (this.props.location !== prevProps.location) {\n        window.scrollTo(0, 0)\n      }\n    }\n  \n    render() {\n      return this.props.children\n    }\n  }\n  \n  export default withRouter(ScrollToTop)","import React, {Component} from 'react';\nimport { Router } from 'react-router-dom';\n\n// Dialogue\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport Modal from 'react-modal'\n\nimport history from './history';\nimport Routes from \"./routes\";\nimport { fire } from \"./Fire.js\";\n\n// Components\nimport Header from './components/misc/Header';\nimport Footer from './components/misc/Footer';\n\n// CSS\nimport \"./assets/css/Text.css\";\nimport \"./assets/css/Align.css\";\nimport \"./assets/css/Images.css\";\nimport \"./assets/css/Misc.css\";\nimport \"./assets/css/Buttons.css\"; \nimport \"./assets/css/Forms.css\"; \n\n// This component fixes bug where new page load would sometimes be in the middle or bottom\nimport ScrollToTop from \"./components/misc/ScrollToTop\";\nimport { HelmetProvider } from 'react-helmet-async';\n\n// For React Modals: was getting a console error: \n// https://github.com/reactjs/react-modal/issues/576\nif (typeof(window) !== 'undefined') {\n  Modal.setAppElement('body')\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       loading: true\n    }\n  }\n\n  componentDidMount(){\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          user: user,\n          loading: false\n        });\n      } else {\n        this.setState({\n          loading: false\n        });\n      }\n    });\n  }\n\n  render() {\n      return (\n        <HelmetProvider>\n          <Router history={history}>\n            <ScrollToTop>\n                <ReactNotification />\n                <Header user={this.state.user} />\n                { !this.state.loading && (\n                  <Routes user={this.state.user} />\n                )}\n                { this.state.loading && (\n                  <div className=\"l-container\">\n                    <h2 className=\"wrapper\">Loading...</h2> \n                  </div>\n                )}\n                <Footer user={this.state.user} />\n            </ScrollToTop>\n          </Router>\n        </HelmetProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction noop() {}\nif (process.env.NODE_ENV !== 'development') {\n  console.log = noop;\n  console.warn = noop;\n  console.error = noop;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}